[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "YUMM –&gt; cold tumor YUMMER –&gt; hot tumor/very active immune response"
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html",
    "title": "vis_de",
    "section": "",
    "text": "Different visualization of the results from clusterwise DE analysis between merged LECs in all YUMM and YUMMER sample. DE was performed as part of a preliminary analysis of BD RHapsody sequencing data conducted by the FCGZ.\n\n\n\nPreliminary analysis identified 7 cluster. That is probably to many. We would expect 3-5 different LEC subpopulations. Ultimately we will probably recluster or merge cluster based on marker gene expression before DE analysis is conducted.\nThere are 2 result gene lists:\n\nConserved marker: Cluster marker genes (DE compared to other cluster) conserved across conditions. Cluster marker that are independent of the tumor type. These can be used to characterize/annotate cluster within the merged/integrated dataset.\nDE genes: Differentially expressed genes between conditions (YUMM vs YUMMER) within each cluster (“Celltype-specific changes”).\n\nMeaning in output table:\n\ncondition_pct.1: percentage of cells where the gene is detected in the cluster for condition\ncondition_pct.2: percentage of cells where the gene is detected on average in the other clusters for condition\n\n\n\n\n\n\nDo we expect specific LEC subtypes to change more between tumor types or do we expect more global changes across all LECs? It could be worth running a DE analysis for all LECs between the tumor types if the later is the case.\nDifferential abundance analysis: Do we expect a gloabl shift in LEC abundance or a subtype-specific shift?\n\n\n\n\n\nlibrary(edgeR)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(readxl)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nseurat &lt;- readRDS(file.path(\"..\", \"..\", \"..\", \"data\", \"scData_LEC_tumor.rds\"))\nDefaultAssay(seurat) &lt;- \"SCT\"\nde_genes &lt;- read_excel(file.path(\"..\", \"..\", \"..\", \"data\", \"diffGenes_yumm_yummer.xlsx\"))\n\n\n\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1) {\n  EnhancedVolcano(df, \n    x = \"avg_log2FC\", y = \"p_val_adj\",\n    FCcutoff = lfc, pCutoff = fdr,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = df[[\"gene\"]], labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[top$gene,])\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n.feature_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- FeaturePlot(seurat, features = top$gene, split.by = 'Condition',\n              max.cutoff = 3, cols = c('grey', 'red'))\n  p\n  }\n}\n\n.violin_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- VlnPlot(seurat, features = top$gene, split.by = 'Condition',\n              group.by = \"ident\", pt.size = 0, combine = FALSE)\n  wrap_plots(plots = p, ncol = 1)\n  }\n}\n\n\n\n\n\n\nTo get an overview of the distribution of cluster in 2d.\n\nDimPlot(seurat, label = TRUE)\n\n\n\n\n\n\nPlot most differentially expressed genes as volcano plot. We don’t have stats for all, but only DE genes (yet). This explains the shape of the volcano.\n\n\nCode\ncluster &lt;- levels(as.factor(de_genes$cluster))\n\n\n\n01234567\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\nWarning: ggrepel: 18 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\n\n\nShow the expression of the top cluster-specific DE genes on the UMAP plot\n\n01234567\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\nThe same as above, but as violin plot to better see expression level\n\n01234567\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\nThe default behaviour of split.by has changed.\nSeparate violin plots are now plotted side-by-side.\nTo restore the old behaviour of a single split violin,\nset split.plot = TRUE.\n      \nThis message will be shown once per session.\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\nCode\npurrr::map(cluster, \\(c) {\n      de_c &lt;- de_genes |&gt; \n        filter(cluster %in% c)\n      sub &lt;- subset(x = seurat, idents = c)\n      mtx &lt;- GetAssayData(object = sub, slot = 'data')\n      cd &lt;- data.frame(sub[[]] |&gt; select('Condition'))\n      .heatmap(mtx, de_c, cd, title = paste0('DE YUMM vs YUMMER in ', c),\n        fdr = 0.1, n_lfc = 20)\n})\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n[1] \"No de genes\"\n\n[[4]]\n\n[[5]]\n\n[[6]]\n\n[[7]]\n\n[[8]]\n[1] \"No de genes\""
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#preamble",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#preamble",
    "title": "vis_de",
    "section": "",
    "text": "library(edgeR)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(readxl)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nseurat &lt;- readRDS(file.path(\"..\", \"..\", \"..\", \"data\", \"scData_LEC_tumor.rds\"))\nDefaultAssay(seurat) &lt;- \"SCT\"\nde_genes &lt;- read_excel(file.path(\"..\", \"..\", \"..\", \"data\", \"diffGenes_yumm_yummer.xlsx\"))\n\n\n\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1) {\n  EnhancedVolcano(df, \n    x = \"avg_log2FC\", y = \"p_val_adj\",\n    FCcutoff = lfc, pCutoff = fdr,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = df[[\"gene\"]], labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[top$gene,])\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n.feature_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- FeaturePlot(seurat, features = top$gene, split.by = 'Condition',\n              max.cutoff = 3, cols = c('grey', 'red'))\n  p\n  }\n}\n\n.violin_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- VlnPlot(seurat, features = top$gene, split.by = 'Condition',\n              group.by = \"ident\", pt.size = 0, combine = FALSE)\n  wrap_plots(plots = p, ncol = 1)\n  }\n}"
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#visualization",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#visualization",
    "title": "vis_de",
    "section": "",
    "text": "To get an overview of the distribution of cluster in 2d.\n\nDimPlot(seurat, label = TRUE)\n\n\n\n\n\n\nPlot most differentially expressed genes as volcano plot. We don’t have stats for all, but only DE genes (yet). This explains the shape of the volcano.\n\n\nCode\ncluster &lt;- levels(as.factor(de_genes$cluster))\n\n\n\n01234567\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\nWarning: ggrepel: 18 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\n\n\nShow the expression of the top cluster-specific DE genes on the UMAP plot\n\n01234567\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\nThe same as above, but as violin plot to better see expression level\n\n01234567\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\nThe default behaviour of split.by has changed.\nSeparate violin plots are now plotted side-by-side.\nTo restore the old behaviour of a single split violin,\nset split.plot = TRUE.\n      \nThis message will be shown once per session.\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\nCode\npurrr::map(cluster, \\(c) {\n      de_c &lt;- de_genes |&gt; \n        filter(cluster %in% c)\n      sub &lt;- subset(x = seurat, idents = c)\n      mtx &lt;- GetAssayData(object = sub, slot = 'data')\n      cd &lt;- data.frame(sub[[]] |&gt; select('Condition'))\n      .heatmap(mtx, de_c, cd, title = paste0('DE YUMM vs YUMMER in ', c),\n        fdr = 0.1, n_lfc = 20)\n})\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n[1] \"No de genes\"\n\n[[4]]\n\n[[5]]\n\n[[6]]\n\n[[7]]\n\n[[8]]\n[1] \"No de genes\""
  },
  {
    "objectID": "code/SNF_draft/DE/de_tumor_CD45.html",
    "href": "code/SNF_draft/DE/de_tumor_CD45.html",
    "title": "DE tumor CD45",
    "section": "",
    "text": "Standard DE analysis using pseudobulk DE methods (note this differs from the FGCZ default analysis). We want to identify differentially expressed genes within LEC cluster between all groups of skin, YUMMER and YUMM.\n\n\n\nlibrary(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n\n\n\n\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_all_tumor_skin.rds\"))\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n#merge cell types\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"monocytes/macrophages\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"DCs\" = c(\"4\", \"12\", \"19\"),\n                        \"CD4 T cells\" = c(\"10\"),\n                        \"CD8 T cells\" = c(\"7\", \"16\"),\n                        \"other T cells\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"endothelial cells/fibroblasts\" = c(\"8\", \"9\", \"13\"),\n                        \"mast cells\" = c(\"14\"),\n                        \"B cells\" = c(\"21\"),\n                        \"other\" = c(\"17\", \"20\"))\n\n# check assignment\nseurat$sample_pooled &lt;- seurat$Sample |&gt; \n  forcats::fct_collapse(\"TumorYUMM1\" = c(\"TumorYUMM1_1A\", \"TumorYUMM1_1B\"),\n                        \"TumorYUMM2\" = c(\"TumorYUMM2_1A\", \"TumorYUMM2_1B\"),\n                        \"TumorYUMM5\" = c(\"TumorYUMM5_2A\", \"TumorYUMM5_2B\"),\n                        \"TumorYUMM6\" = c(\"TumorYUMM6_2A\", \"TumorYUMM6_2B\"),\n                        \"TumorYUMMER3\" = c(\"TumorYUMMER3_1A\", \"TumorYUMMER3_1B\"),\n                        \"TumorYUMMER4\" = c(\"TumorYUMMER4_1A\", \"TumorYUMMER4_1B\"),\n                        \"TumorYUMMER7\" = c(\"TumorYUMMER7_2A\", \"TumorYUMMER7_2B\"),\n                        \"TumorYUMMER8\" = c(\"TumorYUMMER8_2A\", \"TumorYUMMER8_2B\"))\n#table(seurat$Sample, seurat$cond)\ntable(seurat$sample_pooled, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1 1510    0      0\n  SkinLECs_Leukocytes2 2351    0      0\n  TumorYUMM1              0 1250      0\n  TumorYUMM2              0 3538      0\n  TumorYUMM5              0 3432      0\n  TumorYUMM6              0 4647      0\n  TumorYUMMER3            0    0   1918\n  TumorYUMMER4            0    0   2676\n  TumorYUMMER7            0    0   3913\n  TumorYUMMER8            0    0   4972\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  3861  12867  13479 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)\nsaveRDS(sce, \"../../../data/sce_tumor_CD45.rds\")\n\nDE analysis\n\ncond_de &lt;- function(cond1, cond2){\n  # subset sce\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"cell_types\",\"sample_pooled\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 10]\n  print(table(summed.filt$cond, summed.filt$cell_types))\n  \n  # de\n  design &lt;- model.matrix(~factor(summed.filt$cond), summed.filt$sample_pooled)\n  de.results &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$cell_types,\n    design=~factor(cond),\n    coef=ncol(design),\n    condition=summed.filt$cond \n)\n}\n\nskin_yumm &lt;- cond_de(\"skin\", \"YUMM\")\n\n      \n       monocytes/macrophages other T cells DCs CD8 T cells\n  skin                     2             2   2           0\n  YUMM                     4             4   4           4\n      \n       endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  skin                             2           0          0     2       0\n  YUMM                             4           4          4     4       3\n\n#yummer_yumm &lt;- cond_de(\"YUMMER\", \"YUMM\")\nyumm_yummer &lt;- cond_de(\"YUMM\", \"YUMMER\")\n\n        \n         monocytes/macrophages other T cells DCs CD8 T cells\n  YUMM                       4             4   4           4\n  YUMMER                     4             4   4           4\n        \n         endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  YUMM                               4           4          4     4       3\n  YUMMER                             4           4          4     0       4\n\nskin_yummer &lt;- cond_de(\"skin\",\"YUMMER\")\n\n        \n         monocytes/macrophages other T cells DCs CD8 T cells\n  skin                       2             2   2           0\n  YUMMER                     4             4   4           4\n        \n         endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  skin                               2           0          0     2       0\n  YUMMER                             4           4          4     0       4\n\n#DE skin_yumm\nis.de &lt;- decideTestsPerLabel(skin_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                                -1    0    1    NA\nDCs                            967 4045  876  9862\nendothelial cells/fibroblasts  614 5854  899  8383\nmonocytes/macrophages          792 8356 1277  5325\nother                         1194 2309 1235 11012\nother T cells                 1136 5878 1184  7552\n\n#DE yumm_yummer\nis.de &lt;- decideTestsPerLabel(yumm_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                               -1    0   1    NA\nB cells                         2 1082   2 14664\nCD4 T cells                     4 4531  12 11203\nCD8 T cells                   137 5668 101  9844\nDCs                            65 6238 193  9254\nendothelial cells/fibroblasts  51 5882  54  9763\nmast cells                     46 2836  81 12787\nmonocytes/macrophages         772 8401 993  5584\nother T cells                  23 7210   5  8512\n\n#DE skin_yummer\nis.de &lt;- decideTestsPerLabel(skin_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                                -1    0    1   NA\nDCs                            750 6061  502 8437\nendothelial cells/fibroblasts  651 6657  879 7563\nmonocytes/macrophages          806 7251 1135 6558\nother T cells                 1681 5551 1702 6816\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    clust_nam &lt;- gsub(\" \", \"_\", clust)\n    clust_nam &lt;- gsub(\"/\", \"-\", clust_nam)\n    ## --- adapt path until DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/tumor_CD45_\", nam, \"_\", clust_nam, \".csv\"))\n    res\n  })\n}\n\nde_skin_yumm &lt;- write_de_res(skin_yumm, res_nam = \"skin_yumm\")\nde_skin_yumm &lt;- write_de_res(yumm_yummer, res_nam = \"yumm_yummer\")\nde_skin_yumm &lt;- write_de_res(skin_yummer, res_nam = \"skin_yummer\")\n\n\n\n\n\n\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nskin vs yumm selected genes\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\", \"Cxcl9\", \"Cxcl10\", \"Sema3a\", \"CD112\", \"Ccl21a\", \"Reln\", \"Cxcl12\", \"H2-Aa\", \"H2-Ab1\", \"Cd74\", \"Ctss\", \"Ccr2\", \"Il10\", \"Alcam\", \"Esam\", \"Cd274\", \"Ifng\",\"Tnfa\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yumm_yummer), \\(.) {\n  df = yumm_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nyumm vs yummer selected genes\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(yumm_yummer), \\(.) {\n  df = yumm_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Ccr7\", \"Cxcr3\", \"Itgam\", \"Itgal\", \"Itgb2\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nskin vs yummer selected cluster 2\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\", \"Cxcl9\", \"Cxcl10\", \"Sema3a\", \"CD112\", \"Ccl21a\", \"Reln\", \"Cxcl12\", \"H2-Aa\", \"H2-Ab1\", \"Cd74\", \"Ctss\", \"Ccr2\", \"Il10\", \"Alcam\", \"Esam\", \"Cd274\", \"Ifng\",\"Tnfa\",\"Sema7a\", \"Sparc\", \"Ptx3\", \"H2-Aa\", \"Cd74\", \"Ctss\", \"Gbp4\", \"Stat1\", \"Ptn\", \"Cd300lg\", \"Icam1\",\"Vcam1\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nskin vs yummer selected cluster 5\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Cxcl9\", \"Cxcl10\", \"CD112\", \"Ccl21a\", \"Reln\", \"Cxcl12\", \"H2-Aa\", \"H2-Ab1\", \"Cd74\", \"Ctss\", \"Ccr2\", \"Il10\", \"Alcam\", \"Esam\", \"Ifng\",\"Tnfa\",\"Sema7a\", \"Sparc\", \"Ptx3\", \"H2-Aa\", \"Cd74\", \"Ctss\", \"Stat1\", \"Ptn\", \"Cd300lg\", \"Stab2\", \"H2-Q6\", \"H2-Eb1\", \"H2-Q7\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"cell_types\"\n                   \nfor (. in names(skin_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = \"scale.data\")\n    top &lt;- as.data.frame(skin_yumm[[.]]) %&gt;%\n      filter(PValue &lt; 0.05) |&gt; \n      slice_max(abs(logFC), n = 50)\n    top_nam &lt;- rownames(top)[which(rownames(top) %in% rownames(mtx))]\n    mtx_sub &lt;- log1p(mtx[top_nam,])\n    mtx_sub[mtx_sub &lt; -4] &lt;- -4\n    mtx_sub[mtx_sub &gt; 4] &lt;- 4\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### DCs \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n#### endothelial cells/fibroblasts \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n#### monocytes/macrophages \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n#### other \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n#### other T cells \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n\n\n\n\n\nfor (. in names(yumm_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"YUMMER\"))\n    mtx &lt;- GetAssayData(object = sub, slot = \"data\")\n    top &lt;- as.data.frame(yumm_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    top_nam &lt;- rownames(top)\n    mtx_sub &lt;- log1p(mtx[top_nam,])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### B cells \n\n\n\n\n\n\n\n#### CD4 T cells \n\n\n\n\n\n\n\n#### CD8 T cells \n\n\n\n\n\n\n\n#### DCs \n\n\n\n\n\n\n\n#### endothelial cells/fibroblasts \n\n\n\n\n\n\n\n#### mast cells \n\n\n\n\n\n\n\n#### monocytes/macrophages \n\n\n\n\n\n\n\n#### other T cells \n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### DCs \n\n\n\n\n\n\n\n#### endothelial cells/fibroblasts \n\n\n\n\n\n\n\n#### monocytes/macrophages \n\n\n\n\n\n\n\n#### other T cells \n\n\n\n\n\n\n\n\n\n\npb_heatmap &lt;- function(cond1, cond2, de_res){\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"cell_types\", \"sample_pooled\")])\n  summed.filt &lt;- summed[,summed$ncells &gt;= 10]\n  plot_list &lt;- lapply(names(de_res), function(clust){\n    sub &lt;- summed.filt[,colData(summed.filt)$cell_types %in% clust]\n    mtx &lt;- counts(sub)\n    top &lt;- as.data.frame(de_res[[clust]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 30)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    colnames(mtx_sub) &lt;- paste0(\"bulk_\", seq_along(1:ncol(sub)))\n    cd &lt;- data.frame(\"cond\" = sub$cond)\n    rownames(cd) &lt;- colnames(mtx_sub)\n    hm &lt;- pheatmap(mtx_sub, \n        main = clust, fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"none\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n  })\n}\n\n\n\n\npb_heatmap(\"YUMM\", \"YUMMER\", yumm_yummer)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npb_heatmap(\"skin\", \"YUMMER\", skin_yummer)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npb_heatmap(\"skin\", \"YUMM\", skin_yumm)"
  },
  {
    "objectID": "code/SNF_draft/DE/de_tumor_CD45.html#preamble",
    "href": "code/SNF_draft/DE/de_tumor_CD45.html#preamble",
    "title": "DE tumor CD45",
    "section": "",
    "text": "library(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}"
  },
  {
    "objectID": "code/SNF_draft/DE/de_tumor_CD45.html#data-object",
    "href": "code/SNF_draft/DE/de_tumor_CD45.html#data-object",
    "title": "DE tumor CD45",
    "section": "",
    "text": "seurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_all_tumor_skin.rds\"))\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n#merge cell types\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"monocytes/macrophages\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"DCs\" = c(\"4\", \"12\", \"19\"),\n                        \"CD4 T cells\" = c(\"10\"),\n                        \"CD8 T cells\" = c(\"7\", \"16\"),\n                        \"other T cells\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"endothelial cells/fibroblasts\" = c(\"8\", \"9\", \"13\"),\n                        \"mast cells\" = c(\"14\"),\n                        \"B cells\" = c(\"21\"),\n                        \"other\" = c(\"17\", \"20\"))\n\n# check assignment\nseurat$sample_pooled &lt;- seurat$Sample |&gt; \n  forcats::fct_collapse(\"TumorYUMM1\" = c(\"TumorYUMM1_1A\", \"TumorYUMM1_1B\"),\n                        \"TumorYUMM2\" = c(\"TumorYUMM2_1A\", \"TumorYUMM2_1B\"),\n                        \"TumorYUMM5\" = c(\"TumorYUMM5_2A\", \"TumorYUMM5_2B\"),\n                        \"TumorYUMM6\" = c(\"TumorYUMM6_2A\", \"TumorYUMM6_2B\"),\n                        \"TumorYUMMER3\" = c(\"TumorYUMMER3_1A\", \"TumorYUMMER3_1B\"),\n                        \"TumorYUMMER4\" = c(\"TumorYUMMER4_1A\", \"TumorYUMMER4_1B\"),\n                        \"TumorYUMMER7\" = c(\"TumorYUMMER7_2A\", \"TumorYUMMER7_2B\"),\n                        \"TumorYUMMER8\" = c(\"TumorYUMMER8_2A\", \"TumorYUMMER8_2B\"))\n#table(seurat$Sample, seurat$cond)\ntable(seurat$sample_pooled, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1 1510    0      0\n  SkinLECs_Leukocytes2 2351    0      0\n  TumorYUMM1              0 1250      0\n  TumorYUMM2              0 3538      0\n  TumorYUMM5              0 3432      0\n  TumorYUMM6              0 4647      0\n  TumorYUMMER3            0    0   1918\n  TumorYUMMER4            0    0   2676\n  TumorYUMMER7            0    0   3913\n  TumorYUMMER8            0    0   4972\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  3861  12867  13479 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)\nsaveRDS(sce, \"../../../data/sce_tumor_CD45.rds\")\n\nDE analysis\n\ncond_de &lt;- function(cond1, cond2){\n  # subset sce\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"cell_types\",\"sample_pooled\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 10]\n  print(table(summed.filt$cond, summed.filt$cell_types))\n  \n  # de\n  design &lt;- model.matrix(~factor(summed.filt$cond), summed.filt$sample_pooled)\n  de.results &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$cell_types,\n    design=~factor(cond),\n    coef=ncol(design),\n    condition=summed.filt$cond \n)\n}\n\nskin_yumm &lt;- cond_de(\"skin\", \"YUMM\")\n\n      \n       monocytes/macrophages other T cells DCs CD8 T cells\n  skin                     2             2   2           0\n  YUMM                     4             4   4           4\n      \n       endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  skin                             2           0          0     2       0\n  YUMM                             4           4          4     4       3\n\n#yummer_yumm &lt;- cond_de(\"YUMMER\", \"YUMM\")\nyumm_yummer &lt;- cond_de(\"YUMM\", \"YUMMER\")\n\n        \n         monocytes/macrophages other T cells DCs CD8 T cells\n  YUMM                       4             4   4           4\n  YUMMER                     4             4   4           4\n        \n         endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  YUMM                               4           4          4     4       3\n  YUMMER                             4           4          4     0       4\n\nskin_yummer &lt;- cond_de(\"skin\",\"YUMMER\")\n\n        \n         monocytes/macrophages other T cells DCs CD8 T cells\n  skin                       2             2   2           0\n  YUMMER                     4             4   4           4\n        \n         endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  skin                               2           0          0     2       0\n  YUMMER                             4           4          4     0       4\n\n#DE skin_yumm\nis.de &lt;- decideTestsPerLabel(skin_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                                -1    0    1    NA\nDCs                            967 4045  876  9862\nendothelial cells/fibroblasts  614 5854  899  8383\nmonocytes/macrophages          792 8356 1277  5325\nother                         1194 2309 1235 11012\nother T cells                 1136 5878 1184  7552\n\n#DE yumm_yummer\nis.de &lt;- decideTestsPerLabel(yumm_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                               -1    0   1    NA\nB cells                         2 1082   2 14664\nCD4 T cells                     4 4531  12 11203\nCD8 T cells                   137 5668 101  9844\nDCs                            65 6238 193  9254\nendothelial cells/fibroblasts  51 5882  54  9763\nmast cells                     46 2836  81 12787\nmonocytes/macrophages         772 8401 993  5584\nother T cells                  23 7210   5  8512\n\n#DE skin_yummer\nis.de &lt;- decideTestsPerLabel(skin_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                                -1    0    1   NA\nDCs                            750 6061  502 8437\nendothelial cells/fibroblasts  651 6657  879 7563\nmonocytes/macrophages          806 7251 1135 6558\nother T cells                 1681 5551 1702 6816\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    clust_nam &lt;- gsub(\" \", \"_\", clust)\n    clust_nam &lt;- gsub(\"/\", \"-\", clust_nam)\n    ## --- adapt path until DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/tumor_CD45_\", nam, \"_\", clust_nam, \".csv\"))\n    res\n  })\n}\n\nde_skin_yumm &lt;- write_de_res(skin_yumm, res_nam = \"skin_yumm\")\nde_skin_yumm &lt;- write_de_res(yumm_yummer, res_nam = \"yumm_yummer\")\nde_skin_yumm &lt;- write_de_res(skin_yummer, res_nam = \"skin_yummer\")"
  },
  {
    "objectID": "code/SNF_draft/DE/de_tumor_CD45.html#plot-results",
    "href": "code/SNF_draft/DE/de_tumor_CD45.html#plot-results",
    "title": "DE tumor CD45",
    "section": "",
    "text": "#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nskin vs yumm selected genes\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\", \"Cxcl9\", \"Cxcl10\", \"Sema3a\", \"CD112\", \"Ccl21a\", \"Reln\", \"Cxcl12\", \"H2-Aa\", \"H2-Ab1\", \"Cd74\", \"Ctss\", \"Ccr2\", \"Il10\", \"Alcam\", \"Esam\", \"Cd274\", \"Ifng\",\"Tnfa\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yumm_yummer), \\(.) {\n  df = yumm_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nyumm vs yummer selected genes\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(yumm_yummer), \\(.) {\n  df = yumm_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Ccr7\", \"Cxcr3\", \"Itgam\", \"Itgal\", \"Itgb2\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nskin vs yummer selected cluster 2\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\", \"Cxcl9\", \"Cxcl10\", \"Sema3a\", \"CD112\", \"Ccl21a\", \"Reln\", \"Cxcl12\", \"H2-Aa\", \"H2-Ab1\", \"Cd74\", \"Ctss\", \"Ccr2\", \"Il10\", \"Alcam\", \"Esam\", \"Cd274\", \"Ifng\",\"Tnfa\",\"Sema7a\", \"Sparc\", \"Ptx3\", \"H2-Aa\", \"Cd74\", \"Ctss\", \"Gbp4\", \"Stat1\", \"Ptn\", \"Cd300lg\", \"Icam1\",\"Vcam1\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\nskin vs yummer selected cluster 5\n\n#first condition (skin) = baseline, compared to second condition\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Cxcl9\", \"Cxcl10\", \"CD112\", \"Ccl21a\", \"Reln\", \"Cxcl12\", \"H2-Aa\", \"H2-Ab1\", \"Cd74\", \"Ctss\", \"Ccr2\", \"Il10\", \"Alcam\", \"Esam\", \"Ifng\",\"Tnfa\",\"Sema7a\", \"Sparc\", \"Ptx3\", \"H2-Aa\", \"Cd74\", \"Ctss\", \"Stat1\", \"Ptn\", \"Cd300lg\", \"Stab2\", \"H2-Q6\", \"H2-Eb1\", \"H2-Q7\"))\n  #.volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"cell_types\"\n                   \nfor (. in names(skin_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = \"scale.data\")\n    top &lt;- as.data.frame(skin_yumm[[.]]) %&gt;%\n      filter(PValue &lt; 0.05) |&gt; \n      slice_max(abs(logFC), n = 50)\n    top_nam &lt;- rownames(top)[which(rownames(top) %in% rownames(mtx))]\n    mtx_sub &lt;- log1p(mtx[top_nam,])\n    mtx_sub[mtx_sub &lt; -4] &lt;- -4\n    mtx_sub[mtx_sub &gt; 4] &lt;- 4\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### DCs \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n#### endothelial cells/fibroblasts \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n#### monocytes/macrophages \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n#### other \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n#### other T cells \n\n\nWarning in log1p(mtx[top_nam, ]): NaNs produced\n\n\n\n\n\n\n\n\n\n\n\n\nfor (. in names(yumm_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"YUMMER\"))\n    mtx &lt;- GetAssayData(object = sub, slot = \"data\")\n    top &lt;- as.data.frame(yumm_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    top_nam &lt;- rownames(top)\n    mtx_sub &lt;- log1p(mtx[top_nam,])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### B cells \n\n\n\n\n\n\n\n#### CD4 T cells \n\n\n\n\n\n\n\n#### CD8 T cells \n\n\n\n\n\n\n\n#### DCs \n\n\n\n\n\n\n\n#### endothelial cells/fibroblasts \n\n\n\n\n\n\n\n#### mast cells \n\n\n\n\n\n\n\n#### monocytes/macrophages \n\n\n\n\n\n\n\n#### other T cells \n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### DCs \n\n\n\n\n\n\n\n#### endothelial cells/fibroblasts \n\n\n\n\n\n\n\n#### monocytes/macrophages \n\n\n\n\n\n\n\n#### other T cells \n\n\n\n\n\n\n\n\n\n\npb_heatmap &lt;- function(cond1, cond2, de_res){\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"cell_types\", \"sample_pooled\")])\n  summed.filt &lt;- summed[,summed$ncells &gt;= 10]\n  plot_list &lt;- lapply(names(de_res), function(clust){\n    sub &lt;- summed.filt[,colData(summed.filt)$cell_types %in% clust]\n    mtx &lt;- counts(sub)\n    top &lt;- as.data.frame(de_res[[clust]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 30)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    colnames(mtx_sub) &lt;- paste0(\"bulk_\", seq_along(1:ncol(sub)))\n    cd &lt;- data.frame(\"cond\" = sub$cond)\n    rownames(cd) &lt;- colnames(mtx_sub)\n    hm &lt;- pheatmap(mtx_sub, \n        main = clust, fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"none\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n  })\n}\n\n\n\n\npb_heatmap(\"YUMM\", \"YUMMER\", yumm_yummer)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npb_heatmap(\"skin\", \"YUMMER\", skin_yummer)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\npb_heatmap(\"skin\", \"YUMM\", skin_yumm)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "The experiment consist of 3 main factors of interest:\n\nsample origin: tumor, skin, lymph node\nmain cell type class: leucocytes, LECs\ntumor type: YUMM, YUMMER\n\nAs a first check we are interested in the expression of specific marker genes/known marker and how they vary across combinations of these factors.\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\n#library(SingleCellExperiment)\nlibrary(gridExtra)\n\nlibrary(ggrepel)\n\n\n\n\nFrom the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 4 - All leukocytes from LN in tumor samples.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LN_tumor.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n              \n               YUMM YUMMER\n  LnYUMM1_1A   1064      0\n  LnYUMM1_1B    962      0\n  LnYUMM2_1A    821      0\n  LnYUMM2_1B    693      0\n  LnYUMM5_2A   2366      0\n  LnYUMM5_2B   2236      0\n  LnYUMM6_2A    766      0\n  LnYUMM6_2B    814      0\n  LnYUMMER4_1A    0   4809\n  LnYUMMER4_1B    0   4142\n  LnYUMMER7_2A    0   3324\n  LnYUMMER7_2B    0   3258\n  LnYUMMER8_2A    0   3366\n  LnYUMMER8_2B    0   3241\n\ntable(seurat$cond)\n\n\n  YUMM YUMMER \n  9722  22140 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"Naïve CD8 T cells\" = c(\"0\",\"1\"),\n                        \"Naïve CD4 T cells\" = c(\"10\"),\n                        \"Memory/stem like CD8 T cells\" = c(\"4\",\"14\"),\n                        \"NK cells\" = c(\"3\"),\n                        \"TGD\"=c(\"5\",\"13\"),\n                        \"regulatory T cells\" = c(\"7\", \"12\"),\n                        \"DCs\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"LECs\" =c(\"16\"),\n                        \"B cells\" = c(\"9\", \"11\"),\n                        \"other\" = c(\"17\"))\n\nseurat$cell_types_nr &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"0\" = c(\"0\",\"1\"),\n                        \"1\" = c(\"10\"),\n                        \"2\" = c(\"4\",\"14\"),\n                        \"3\" = c(\"3\"),\n                        \"4\"=c(\"5\",\"13\"),\n                        \"5\" = c(\"7\", \"12\"),\n                        \"6\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"7\" =c(\"16\"),\n                        \"8\" = c(\"9\", \"11\"),\n                        \"9\" = c(\"17\"))\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Ptprc\", \"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\", \"Cxcr3\", \"Fcgr1\", \"Fcgr3\", \"Ncam1\", \"Cd24a\", \"Klrb1c\", \"Cd62l\", \"Ly6c1\", \"Adgre1\", \"Cd44\", \"Nrp1\", \"Lag3\", \"Il2ra\", \"Icos\", \"Klf2\", \"Il7r\", \"Ifng\", \"Prf1\", \"Cd244a\", \"Cd160\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\", \"Ifng\")\n\n\n\n\n\n\n\n# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 2 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      2468.\n2 YUMMER    2635.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 2 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1241.\n2 YUMMER     1320.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\ncond_dat_nr &lt;- seurat[[]] |&gt; group_by(cond, cell_types_nr) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\nggplot(cond_dat_nr, aes(fill=cell_types_nr, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\nggplot(cond_dat_nr, aes(fill=cell_types_nr, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"LN CD45\") + \n  facet_wrap(~cond) \n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"LN CD45\") + \n  facet_wrap(~cond) \n\n\n\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types_nr\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCluster\nGenes\nCluster\nGenes\n\n\n0 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n9 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n1 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n10 - naive CD4 T cells\nCd3e, Cd4, Tsf7\n\n\n2 - Monocytes\nCcr7, Csf2rb, Cd63\n11 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n3 - NK cells\nTsf7, Sell, Itgax, Klra8\n12 - T regs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n\n\n4 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1, Ctla4\n13 - TGD\nCd3e, Trdc, Tsf7\n\n\n5 - TGD\nCd3e, Tsf7, Sell, Trdc\n14 - CD8 T cells\nCd3e, Cd8a\n\n\n6 - Granulocytes\nTcf7, Ccr7, Csf2rb, Cd74, H2-Ab1, H2-Aa, Cd63\n15 - DCs\nItgax, Itgam, Csf2rb, Il1r2, Cd74, H2-Aa, H2-Ab1\n\n\n7 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n16 - LECs\nProx1, Pecam1\n\n\n8 - Granulocytes\nCcr7, Cd80, Csf2rb, Cd63\n17 - T cells\nCD4, Sell\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = c(dims, \"ident\", features),\n: The following requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 2, assay = \"SCT\", add.noise = F)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, slot = slot): The\nfollowing requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, cells = cells):\nThe following requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 2, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster0_seurat &lt;- subset(seurat, idents = 0)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster0_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster5_seurat &lt;- subset(seurat, idents = 5)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster5_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#preamble",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#preamble",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\n#library(SingleCellExperiment)\nlibrary(gridExtra)\n\nlibrary(ggrepel)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#data-objects",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#data-objects",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "From the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 4 - All leukocytes from LN in tumor samples.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LN_tumor.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n              \n               YUMM YUMMER\n  LnYUMM1_1A   1064      0\n  LnYUMM1_1B    962      0\n  LnYUMM2_1A    821      0\n  LnYUMM2_1B    693      0\n  LnYUMM5_2A   2366      0\n  LnYUMM5_2B   2236      0\n  LnYUMM6_2A    766      0\n  LnYUMM6_2B    814      0\n  LnYUMMER4_1A    0   4809\n  LnYUMMER4_1B    0   4142\n  LnYUMMER7_2A    0   3324\n  LnYUMMER7_2B    0   3258\n  LnYUMMER8_2A    0   3366\n  LnYUMMER8_2B    0   3241\n\ntable(seurat$cond)\n\n\n  YUMM YUMMER \n  9722  22140 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"Naïve CD8 T cells\" = c(\"0\",\"1\"),\n                        \"Naïve CD4 T cells\" = c(\"10\"),\n                        \"Memory/stem like CD8 T cells\" = c(\"4\",\"14\"),\n                        \"NK cells\" = c(\"3\"),\n                        \"TGD\"=c(\"5\",\"13\"),\n                        \"regulatory T cells\" = c(\"7\", \"12\"),\n                        \"DCs\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"LECs\" =c(\"16\"),\n                        \"B cells\" = c(\"9\", \"11\"),\n                        \"other\" = c(\"17\"))\n\nseurat$cell_types_nr &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"0\" = c(\"0\",\"1\"),\n                        \"1\" = c(\"10\"),\n                        \"2\" = c(\"4\",\"14\"),\n                        \"3\" = c(\"3\"),\n                        \"4\"=c(\"5\",\"13\"),\n                        \"5\" = c(\"7\", \"12\"),\n                        \"6\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"7\" =c(\"16\"),\n                        \"8\" = c(\"9\", \"11\"),\n                        \"9\" = c(\"17\"))\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Ptprc\", \"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\", \"Cxcr3\", \"Fcgr1\", \"Fcgr3\", \"Ncam1\", \"Cd24a\", \"Klrb1c\", \"Cd62l\", \"Ly6c1\", \"Adgre1\", \"Cd44\", \"Nrp1\", \"Lag3\", \"Il2ra\", \"Icos\", \"Klf2\", \"Il7r\", \"Ifng\", \"Prf1\", \"Cd244a\", \"Cd160\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\", \"Ifng\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#overview",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#overview",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 2 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      2468.\n2 YUMMER    2635.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 2 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1241.\n2 YUMMER     1320.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\ncond_dat_nr &lt;- seurat[[]] |&gt; group_by(cond, cell_types_nr) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\nggplot(cond_dat_nr, aes(fill=cell_types_nr, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\nggplot(cond_dat_nr, aes(fill=cell_types_nr, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"LN CD45\") + \n  facet_wrap(~cond) \n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"LN CD45\") + \n  facet_wrap(~cond) \n\n\n\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types_nr\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#cluster-marker-gene-expression",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#cluster-marker-gene-expression",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "Cluster\nGenes\nCluster\nGenes\n\n\n0 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n9 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n1 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n10 - naive CD4 T cells\nCd3e, Cd4, Tsf7\n\n\n2 - Monocytes\nCcr7, Csf2rb, Cd63\n11 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n3 - NK cells\nTsf7, Sell, Itgax, Klra8\n12 - T regs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n\n\n4 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1, Ctla4\n13 - TGD\nCd3e, Trdc, Tsf7\n\n\n5 - TGD\nCd3e, Tsf7, Sell, Trdc\n14 - CD8 T cells\nCd3e, Cd8a\n\n\n6 - Granulocytes\nTcf7, Ccr7, Csf2rb, Cd74, H2-Ab1, H2-Aa, Cd63\n15 - DCs\nItgax, Itgam, Csf2rb, Il1r2, Cd74, H2-Aa, H2-Ab1\n\n\n7 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n16 - LECs\nProx1, Pecam1\n\n\n8 - Granulocytes\nCcr7, Cd80, Csf2rb, Cd63\n17 - T cells\nCD4, Sell\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = c(dims, \"ident\", features),\n: The following requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 2, assay = \"SCT\", add.noise = F)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, slot = slot): The\nfollowing requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, cells = cells):\nThe following requested variables were not found: Krt15, Cd62l"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#conditional-marker-expression",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#conditional-marker-expression",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cond_marker, ncol = 2, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster0_seurat &lt;- subset(seurat, idents = 0)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster0_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster5_seurat &lt;- subset(seurat, idents = 5)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster5_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "The experiment consist of 3 main factors of interest:\n\nsample origin: tumor, skin, lymph node\nmain cell type class: leucocytes, LECs\ntumor type: YUMM, YUMMER\n\nAs a first check we are interested in the expression of specific marker genes/known marker and how they vary across combinations of these factors.\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nFrom the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 2 - Integrated tumor and skin LECs.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\nseurat &lt;- subset(seurat, idents = '5', invert = TRUE)\nseurat$ident &lt;- droplevels(seurat$ident)\nlevels(seurat$ident) &lt;- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\")\nseurat &lt;- RenameIdents(object = seurat, `6` = \"5\")\nseurat &lt;- RenameIdents(object = seurat, `7` = \"6\")\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  467    0      0\n  SkinLECs_Leukocytes2  667    0      0\n  TumorYUMM1_1A           0   11      0\n  TumorYUMM1_1B           0   10      0\n  TumorYUMM2_1A           0   41      0\n  TumorYUMM2_1B           0   31      0\n  TumorYUMM5_2A           0   40      0\n  TumorYUMM5_2B           0   41      0\n  TumorYUMM6_2A           0   49      0\n  TumorYUMM6_2B           0   59      0\n  TumorYUMMER3_1A         0    0     59\n  TumorYUMMER3_1B         0    0     37\n  TumorYUMMER4_1A         0    0     74\n  TumorYUMMER4_1B         0    0     64\n  TumorYUMMER7_2A         0    0     78\n  TumorYUMMER7_2B         0    0     83\n  TumorYUMMER8_2A         0    0    147\n  TumorYUMMER8_2B         0    0    129\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1134    282    671 \n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Prox1\", \"Pdpn\", \"Ackr4\", \"Foxp2\", \"Cldn11\", \"Alcam\", \"Esam\", \"Cd24a\", \"Lyve1\", \"Ptx3\", \"Mrc1\", \"Ackr2\", \"Ccl21a\", \"Reln\", \"Mmrn1\", \"Mki67\", \"Aurkb\", \"Jam2\", \"Flt1\", \"Plvap\")\n\ncond_marker &lt;- c(\"Lyve1\", \"Ptx3\", \"Cldn11\", \"Mrc1\", \"Ackr2\", \"Icam1\", \"Vcam1\", \"Sema3a\", \"Nectin2\", \"Cd274\", \"Cxcl12\", \"Ccl21a\", \"Stat1\")\n\n\n\n\n\n\n\n# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4952.\n2 YUMMER    5113.\n3 skin      5432.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       2096.\n2 YUMMER     2177.\n3 skin       2211.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, ident) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(cond_dat, aes(fill=ident, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", split.by = \"cond\", reduction = \"umap\") + ggtitle(\"\")\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#preamble",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#preamble",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#data-objects",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#data-objects",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "From the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 2 - Integrated tumor and skin LECs.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\nseurat &lt;- subset(seurat, idents = '5', invert = TRUE)\nseurat$ident &lt;- droplevels(seurat$ident)\nlevels(seurat$ident) &lt;- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\")\nseurat &lt;- RenameIdents(object = seurat, `6` = \"5\")\nseurat &lt;- RenameIdents(object = seurat, `7` = \"6\")\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  467    0      0\n  SkinLECs_Leukocytes2  667    0      0\n  TumorYUMM1_1A           0   11      0\n  TumorYUMM1_1B           0   10      0\n  TumorYUMM2_1A           0   41      0\n  TumorYUMM2_1B           0   31      0\n  TumorYUMM5_2A           0   40      0\n  TumorYUMM5_2B           0   41      0\n  TumorYUMM6_2A           0   49      0\n  TumorYUMM6_2B           0   59      0\n  TumorYUMMER3_1A         0    0     59\n  TumorYUMMER3_1B         0    0     37\n  TumorYUMMER4_1A         0    0     74\n  TumorYUMMER4_1B         0    0     64\n  TumorYUMMER7_2A         0    0     78\n  TumorYUMMER7_2B         0    0     83\n  TumorYUMMER8_2A         0    0    147\n  TumorYUMMER8_2B         0    0    129\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1134    282    671 \n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Prox1\", \"Pdpn\", \"Ackr4\", \"Foxp2\", \"Cldn11\", \"Alcam\", \"Esam\", \"Cd24a\", \"Lyve1\", \"Ptx3\", \"Mrc1\", \"Ackr2\", \"Ccl21a\", \"Reln\", \"Mmrn1\", \"Mki67\", \"Aurkb\", \"Jam2\", \"Flt1\", \"Plvap\")\n\ncond_marker &lt;- c(\"Lyve1\", \"Ptx3\", \"Cldn11\", \"Mrc1\", \"Ackr2\", \"Icam1\", \"Vcam1\", \"Sema3a\", \"Nectin2\", \"Cd274\", \"Cxcl12\", \"Ccl21a\", \"Stat1\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#overview",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#overview",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4952.\n2 YUMMER    5113.\n3 skin      5432.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       2096.\n2 YUMMER     2177.\n3 skin       2211.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, ident) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(cond_dat, aes(fill=ident, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", split.by = \"cond\", reduction = \"umap\") + ggtitle(\"\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#cluster-marker-gene-expression",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#cluster-marker-gene-expression",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#conditional-marker-expression",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#conditional-marker-expression",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LECs_tumor",
    "section": "",
    "text": "Study LEC migration within lymphatic system in the context of “hot” and “cold” tumor"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "The experiment consist of 3 main factors of interest:\n\nsample origin: tumor, skin, lymph node\nmain cell type class: leucocytes, LECs\ntumor type: YUMM, YUMMER\n\nAs a first check we are interested in the expression of specific marker genes/known marker and how they vary across combinations of these factors.\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(gridExtra)\n\nlibrary(ggrepel)\n\n\n\n\nFrom the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 3 - Integrated tumor and skin leukocytes.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_all_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1 1510    0      0\n  SkinLECs_Leukocytes2 2351    0      0\n  TumorYUMM1_1A           0  664      0\n  TumorYUMM1_1B           0  586      0\n  TumorYUMM2_1A           0 1886      0\n  TumorYUMM2_1B           0 1652      0\n  TumorYUMM5_2A           0 1829      0\n  TumorYUMM5_2B           0 1603      0\n  TumorYUMM6_2A           0 2380      0\n  TumorYUMM6_2B           0 2267      0\n  TumorYUMMER3_1A         0    0   1031\n  TumorYUMMER3_1B         0    0    887\n  TumorYUMMER4_1A         0    0   1442\n  TumorYUMMER4_1B         0    0   1234\n  TumorYUMMER7_2A         0    0   2015\n  TumorYUMMER7_2B         0    0   1898\n  TumorYUMMER8_2A         0    0   2593\n  TumorYUMMER8_2B         0    0   2379\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  3861  12867  13479 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"monocytes/macrophages\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"DCs\" = c(\"4\", \"12\", \"19\"),\n                        \"CD4 T cells\" = c(\"10\"),\n                        \"CD8 T cells\" = c(\"7\", \"16\"),\n                        \"other T cells\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"endothelial cells/fibroblasts\" = c(\"8\", \"9\", \"13\"),\n                        \"mast cells\" = c(\"14\"),\n                        \"B cells\" = c(\"21\"),\n                        \"other\" = c(\"17\", \"20\"))\n\nseurat$cell_types_nr &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"1\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"2\" = c(\"4\", \"12\", \"19\"),\n                        \"3\" = c(\"10\"),\n                        \"4\" = c(\"7\", \"16\"),\n                        \"5\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"6\" = c(\"8\", \"9\", \"13\"),\n                        \"7\" = c(\"14\"),\n                        \"8\" = c(\"21\"),\n                        \"9\" = c(\"17\", \"20\"))\n\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\")\n\n\n\n\n\n\n\n# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4942.\n2 YUMMER    4687.\n3 skin      5856.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1960.\n2 YUMMER     1872.\n3 skin       2199.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, y=n_cells, x=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"Tumor CD45\") + \n  facet_wrap(~cond) \n\n\n\ncond_dat_filtered &lt;- cond_dat |&gt; filter(!cond %in% \"skin\")\n\nggplot(cond_dat_filtered, aes(fill=cell_types, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"Tumor CD45\") + \n  facet_wrap(~cond) \n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n#Almut please put number of clusters inside the plot\n\n\n\n\n\nDimPlot(seurat, group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") \n\n\n\n\n\nsub &lt;- subset(x = seurat, subset = cond %in% c(\"YUMM\", \"YUMMER\"))\np &lt;- DimPlot(sub, group.by = \"cell_types_nr\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") \n\n#ggsave(\"../../../out/EDA/umap_yum_yummer_tumor_cD45.pdf\", p)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCluster\nGenes\nCluster\nGenes\nCluster\nGenes\n\n\n0 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgax, Csf2rb, Il1r2\n9 - LECs\nProx1, Pecam1\n18 - Macrophages\nCxcr4, Il1a, CD80, Csf3r, Il1r2\n\n\n1 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgam\n10 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n19 - DCs\nCd74, H2-Ab1, H2-Aa\n\n\n2 - Granulocytes\nNotch2, Itgax, CD80, Csf2rb, Il1r2\n11 - TGD\nCd3e, Tcf7, Trdc\n20 -Keratinocytes\nKrt15, Krt5\n\n\n3 - TGD\nTcf7, Lef1, Sell, Tigit, Trdc\n12 - DC\nCCR7, Il12b, CD80, Csf2rb\n21 - B cells\nCD19, Cd79a\n\n\n4 - cDC2\nNotch2, Itgam\n13 - Fibroblasts\nacta2, Pdgfrb\n22 - Monocytes\nItgax\n\n\n5 - Macrophages\nNotch2, Itgax, Itgam, Csf2rb\n14 - Mast cells\nNotch2, Csf2rb, Cd63\n23 - TGD\nTcf7, Trdc\n\n\n6 - Monocytes\nItgam\n15 - T cells\nCd3e, Tcf7, Cxcr4,\n24 - T cells\nCcl3, Ccl4\n\n\n7 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1\n16 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Ctla4\n\n\n\n\n8 - LECs\nNotch2, Prox1, Pecam1\n17 - Osteoclasts\nCtsk\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"cell_types\"\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) \n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"ident\"\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster7_seurat &lt;- subset(seurat, idents = 7)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster7_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster16_seurat &lt;- subset(seurat, idents = 16)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster16_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#preamble",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#preamble",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(gridExtra)\n\nlibrary(ggrepel)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#data-objects",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#data-objects",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "From the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 3 - Integrated tumor and skin leukocytes.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_all_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1 1510    0      0\n  SkinLECs_Leukocytes2 2351    0      0\n  TumorYUMM1_1A           0  664      0\n  TumorYUMM1_1B           0  586      0\n  TumorYUMM2_1A           0 1886      0\n  TumorYUMM2_1B           0 1652      0\n  TumorYUMM5_2A           0 1829      0\n  TumorYUMM5_2B           0 1603      0\n  TumorYUMM6_2A           0 2380      0\n  TumorYUMM6_2B           0 2267      0\n  TumorYUMMER3_1A         0    0   1031\n  TumorYUMMER3_1B         0    0    887\n  TumorYUMMER4_1A         0    0   1442\n  TumorYUMMER4_1B         0    0   1234\n  TumorYUMMER7_2A         0    0   2015\n  TumorYUMMER7_2B         0    0   1898\n  TumorYUMMER8_2A         0    0   2593\n  TumorYUMMER8_2B         0    0   2379\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  3861  12867  13479 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"monocytes/macrophages\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"DCs\" = c(\"4\", \"12\", \"19\"),\n                        \"CD4 T cells\" = c(\"10\"),\n                        \"CD8 T cells\" = c(\"7\", \"16\"),\n                        \"other T cells\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"endothelial cells/fibroblasts\" = c(\"8\", \"9\", \"13\"),\n                        \"mast cells\" = c(\"14\"),\n                        \"B cells\" = c(\"21\"),\n                        \"other\" = c(\"17\", \"20\"))\n\nseurat$cell_types_nr &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"1\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"2\" = c(\"4\", \"12\", \"19\"),\n                        \"3\" = c(\"10\"),\n                        \"4\" = c(\"7\", \"16\"),\n                        \"5\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"6\" = c(\"8\", \"9\", \"13\"),\n                        \"7\" = c(\"14\"),\n                        \"8\" = c(\"21\"),\n                        \"9\" = c(\"17\", \"20\"))\n\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#overview",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#overview",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4942.\n2 YUMMER    4687.\n3 skin      5856.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1960.\n2 YUMMER     1872.\n3 skin       2199.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, y=n_cells, x=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"Tumor CD45\") + \n  facet_wrap(~cond) \n\n\n\ncond_dat_filtered &lt;- cond_dat |&gt; filter(!cond %in% \"skin\")\n\nggplot(cond_dat_filtered, aes(fill=cell_types, x=\"\", y=n_cells)) + \n  geom_bar(position=\"fill\", stat=\"identity\", color=\"white\") + \n  coord_polar(\"y\", start=0) +\n  theme_void() + \n  ggtitle(\"Tumor CD45\") + \n  facet_wrap(~cond) \n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n#Almut please put number of clusters inside the plot\n\n\n\n\n\nDimPlot(seurat, group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") \n\n\n\n\n\nsub &lt;- subset(x = seurat, subset = cond %in% c(\"YUMM\", \"YUMMER\"))\np &lt;- DimPlot(sub, group.by = \"cell_types_nr\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") \n\n#ggsave(\"../../../out/EDA/umap_yum_yummer_tumor_cD45.pdf\", p)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#cluster-marker-gene-expression",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#cluster-marker-gene-expression",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "Cluster\nGenes\nCluster\nGenes\nCluster\nGenes\n\n\n0 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgax, Csf2rb, Il1r2\n9 - LECs\nProx1, Pecam1\n18 - Macrophages\nCxcr4, Il1a, CD80, Csf3r, Il1r2\n\n\n1 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgam\n10 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n19 - DCs\nCd74, H2-Ab1, H2-Aa\n\n\n2 - Granulocytes\nNotch2, Itgax, CD80, Csf2rb, Il1r2\n11 - TGD\nCd3e, Tcf7, Trdc\n20 -Keratinocytes\nKrt15, Krt5\n\n\n3 - TGD\nTcf7, Lef1, Sell, Tigit, Trdc\n12 - DC\nCCR7, Il12b, CD80, Csf2rb\n21 - B cells\nCD19, Cd79a\n\n\n4 - cDC2\nNotch2, Itgam\n13 - Fibroblasts\nacta2, Pdgfrb\n22 - Monocytes\nItgax\n\n\n5 - Macrophages\nNotch2, Itgax, Itgam, Csf2rb\n14 - Mast cells\nNotch2, Csf2rb, Cd63\n23 - TGD\nTcf7, Trdc\n\n\n6 - Monocytes\nItgam\n15 - T cells\nCd3e, Tcf7, Cxcr4,\n24 - T cells\nCcl3, Ccl4\n\n\n7 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1\n16 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Ctla4\n\n\n\n\n8 - LECs\nNotch2, Prox1, Pecam1\n17 - Osteoclasts\nCtsk\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"cell_types\"\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#conditional-marker-expression",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#conditional-marker-expression",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) \n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"ident\"\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster7_seurat &lt;- subset(seurat, idents = 7)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster7_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster16_seurat &lt;- subset(seurat, idents = 16)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster16_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/DE/de_tumor_vs_LN_CD45.html",
    "href": "code/SNF_draft/DE/de_tumor_vs_LN_CD45.html",
    "title": "DE_tumor_vs_LN_CD45",
    "section": "",
    "text": "So far LN_CD45 and tumour_CD45 objects have been processed separately.\nHere we will compare assigned cell types between tumor and Ln samples within each tumor type (YUMM, YUMMER)\n\n\n\nlibrary(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n\n\n\n\n\nsce_tum &lt;- readRDS(\"../../../data/sce_tumor_CD45.rds\")\nsce_LN &lt;- readRDS(\"../../../data/sce_LN_CD45.rds\")\n\n#common genes\nuniverse &lt;- intersect(rownames(sce_tum), rownames(sce_LN))\nlength(universe)\n\n[1] 14257\n\n# Subsetting the SingleCellExperiment object.\nsce_tum &lt;- sce_tum[universe,]\nsce_LN &lt;- sce_LN[universe,]\n\nrowData(sce_tum) &lt;- rowData(sce_LN)\nsce_tum$tissue &lt;- \"tumor_CD45\"\nsce_LN$tissue &lt;- \"LN_CD45\"\n\ncom_colData &lt;- intersect(colnames(colData(sce_tum)), colnames(colData(sce_LN)))\ncolData(sce_tum) &lt;- colData(sce_tum)[,com_colData]\ncolData(sce_LN) &lt;- colData(sce_LN)[,com_colData]\naltExps(sce_LN, withDimnames=TRUE, withColData=FALSE) &lt;- NULL\naltExps(sce_tum, withDimnames=TRUE, withColData=FALSE) &lt;- NULL\n\nsce &lt;- cbind(sce_tum, sce_LN)\ntable(sce$cond, sce$tissue)\n\n        \n         LN_CD45 tumor_CD45\n  skin         0       3861\n  YUMM      9722      12867\n  YUMMER   22140      13479\n\nsce &lt;- sce[,!sce$cond %in% \"skin\"]\n\n# collapse corresponding cell types\nsce$com_celltypes &lt;- sce$cell_types |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"DCs\" = c(\"DCs/TGD\", \"DCs\"),\n                        \"CD4 T cells\" = c(\"CD4 T cells\", \"Naïve CD4 T cells\"),\n                        \"CD8 T cells\" = c(\"CD8 T cells\", \n                                          \"Naive/memory/stem like CD8 T cells\"),\n                        \"other T cells\" = c(\"regulatory T cells\", \"other T cells\"))\n\n\n\n\n\npb_de &lt;- function(cond){\n  sub &lt;- sce[,sce$cond %in% cond]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sub,\n                               id=colData(sub)[,c(\"com_celltypes\", \n                                                  \"sample_pooled\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 10]\n  print(table(summed.filt$tissue, summed.filt$com_celltypes))\n  \n  # Model design\n  ## Do the LN and tumor sample correspond to the same mouse?\n  design &lt;- model.matrix(~ tissue, as.data.frame(colData(summed.filt)))\n  \n  # To specify the contrast/coef. \n  colnames(design)\n  \n  # Differential expression\n  tum_LN &lt;- pseudoBulkDGE(summed.filt, \n      label=summed.filt$com_celltypes,\n      design=~tissue,\n      coef=\"tissuetumor_CD45\",\n      condition=summed.filt$tissue)\n}\n\nyumm &lt;- pb_de(\"YUMM\")\n\n            \n             monocytes/macrophages other T cells DCs CD8 T cells\n  LN_CD45                        0             4   4           4\n  tumor_CD45                     4             4   4           4\n            \n             endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  LN_CD45                                0           4          0     2       4\n  tumor_CD45                             4           4          4     4       3\n            \n             NK cells LECs\n  LN_CD45           4    4\n  tumor_CD45        0    0\n\nyummer &lt;- pb_de(\"YUMMER\")\n\n            \n             monocytes/macrophages other T cells DCs CD8 T cells\n  LN_CD45                        0             3   3           3\n  tumor_CD45                     4             4   4           4\n            \n             endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  LN_CD45                                0           3          0     2       3\n  tumor_CD45                             4           4          4     0       4\n            \n             NK cells LECs\n  LN_CD45           3    3\n  tumor_CD45        0    0\n\n# Number of DE genes per cluster in yummer_yumm\nis.de &lt;- decideTestsPerLabel(yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                -1    0    1    NA\nB cells        330 2157  516 11254\nCD4 T cells    499 2076  555 11127\nCD8 T cells    506 3703  589  9459\nDCs           1613 4074 1662  6908\nother          448 1484  816 11509\nother T cells  968 2137 1063 10089\n\nis.de &lt;- decideTestsPerLabel(yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                -1    0    1    NA\nB cells        629 1309  622 11697\nCD4 T cells    764 3267  852  9374\nCD8 T cells   1072 5858 1220  6107\nDCs           2015 4869 2041  5332\nother T cells 1633 4290 1672  6662\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nyumm_tum_LN &lt;- write_de_res(yumm, res_nam = \"yumm_tum_vs_LN\")\nyummer_tum_LN &lt;- write_de_res(yummer, res_nam = \"yummer_tum_vs_LN\")\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yumm), \\(.) {\n  df = yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer), \\(.) {\n  df = yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "code/SNF_draft/DE/de_tumor_vs_LN_CD45.html#de-between-conditions",
    "href": "code/SNF_draft/DE/de_tumor_vs_LN_CD45.html#de-between-conditions",
    "title": "DE_tumor_vs_LN_CD45",
    "section": "",
    "text": "So far LN_CD45 and tumour_CD45 objects have been processed separately.\nHere we will compare assigned cell types between tumor and Ln samples within each tumor type (YUMM, YUMMER)\n\n\n\nlibrary(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n\n\n\n\n\nsce_tum &lt;- readRDS(\"../../../data/sce_tumor_CD45.rds\")\nsce_LN &lt;- readRDS(\"../../../data/sce_LN_CD45.rds\")\n\n#common genes\nuniverse &lt;- intersect(rownames(sce_tum), rownames(sce_LN))\nlength(universe)\n\n[1] 14257\n\n# Subsetting the SingleCellExperiment object.\nsce_tum &lt;- sce_tum[universe,]\nsce_LN &lt;- sce_LN[universe,]\n\nrowData(sce_tum) &lt;- rowData(sce_LN)\nsce_tum$tissue &lt;- \"tumor_CD45\"\nsce_LN$tissue &lt;- \"LN_CD45\"\n\ncom_colData &lt;- intersect(colnames(colData(sce_tum)), colnames(colData(sce_LN)))\ncolData(sce_tum) &lt;- colData(sce_tum)[,com_colData]\ncolData(sce_LN) &lt;- colData(sce_LN)[,com_colData]\naltExps(sce_LN, withDimnames=TRUE, withColData=FALSE) &lt;- NULL\naltExps(sce_tum, withDimnames=TRUE, withColData=FALSE) &lt;- NULL\n\nsce &lt;- cbind(sce_tum, sce_LN)\ntable(sce$cond, sce$tissue)\n\n        \n         LN_CD45 tumor_CD45\n  skin         0       3861\n  YUMM      9722      12867\n  YUMMER   22140      13479\n\nsce &lt;- sce[,!sce$cond %in% \"skin\"]\n\n# collapse corresponding cell types\nsce$com_celltypes &lt;- sce$cell_types |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"DCs\" = c(\"DCs/TGD\", \"DCs\"),\n                        \"CD4 T cells\" = c(\"CD4 T cells\", \"Naïve CD4 T cells\"),\n                        \"CD8 T cells\" = c(\"CD8 T cells\", \n                                          \"Naive/memory/stem like CD8 T cells\"),\n                        \"other T cells\" = c(\"regulatory T cells\", \"other T cells\"))\n\n\n\n\n\npb_de &lt;- function(cond){\n  sub &lt;- sce[,sce$cond %in% cond]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sub,\n                               id=colData(sub)[,c(\"com_celltypes\", \n                                                  \"sample_pooled\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 10]\n  print(table(summed.filt$tissue, summed.filt$com_celltypes))\n  \n  # Model design\n  ## Do the LN and tumor sample correspond to the same mouse?\n  design &lt;- model.matrix(~ tissue, as.data.frame(colData(summed.filt)))\n  \n  # To specify the contrast/coef. \n  colnames(design)\n  \n  # Differential expression\n  tum_LN &lt;- pseudoBulkDGE(summed.filt, \n      label=summed.filt$com_celltypes,\n      design=~tissue,\n      coef=\"tissuetumor_CD45\",\n      condition=summed.filt$tissue)\n}\n\nyumm &lt;- pb_de(\"YUMM\")\n\n            \n             monocytes/macrophages other T cells DCs CD8 T cells\n  LN_CD45                        0             4   4           4\n  tumor_CD45                     4             4   4           4\n            \n             endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  LN_CD45                                0           4          0     2       4\n  tumor_CD45                             4           4          4     4       3\n            \n             NK cells LECs\n  LN_CD45           4    4\n  tumor_CD45        0    0\n\nyummer &lt;- pb_de(\"YUMMER\")\n\n            \n             monocytes/macrophages other T cells DCs CD8 T cells\n  LN_CD45                        0             3   3           3\n  tumor_CD45                     4             4   4           4\n            \n             endothelial cells/fibroblasts CD4 T cells mast cells other B cells\n  LN_CD45                                0           3          0     2       3\n  tumor_CD45                             4           4          4     0       4\n            \n             NK cells LECs\n  LN_CD45           3    3\n  tumor_CD45        0    0\n\n# Number of DE genes per cluster in yummer_yumm\nis.de &lt;- decideTestsPerLabel(yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                -1    0    1    NA\nB cells        330 2157  516 11254\nCD4 T cells    499 2076  555 11127\nCD8 T cells    506 3703  589  9459\nDCs           1613 4074 1662  6908\nother          448 1484  816 11509\nother T cells  968 2137 1063 10089\n\nis.de &lt;- decideTestsPerLabel(yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                -1    0    1    NA\nB cells        629 1309  622 11697\nCD4 T cells    764 3267  852  9374\nCD8 T cells   1072 5858 1220  6107\nDCs           2015 4869 2041  5332\nother T cells 1633 4290 1672  6662\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nyumm_tum_LN &lt;- write_de_res(yumm, res_nam = \"yumm_tum_vs_LN\")\nyummer_tum_LN &lt;- write_de_res(yummer, res_nam = \"yummer_tum_vs_LN\")\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yumm), \\(.) {\n  df = yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer), \\(.) {\n  df = yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LN_CD45_almut.html",
    "href": "code/SNF_draft/DE/de_LN_CD45_almut.html",
    "title": "DE_LN_CD45",
    "section": "",
    "text": "Standard DE analysis using pseudobulk DE methods (note this differs from the FGCZ default analysis). We want to identify differentially expressed genes within LN cluster between YUMMER and YUMM.\n\n\n\nlibrary(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n\n\n\n\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LN_tumor.rds\"))\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n\n# Pool samples\nseurat$sample_pooled &lt;- seurat$Sample |&gt; \n  forcats::fct_collapse(\"LnYUMM1\" = c(\"LnYUMM1_1A\", \"LnYUMM1_1B\"),\n                        \"LnYUMM2\" = c(\"LnYUMM2_1A\", \"LnYUMM2_1B\"),\n                        \"LnYUMM5\" = c(\"LnYUMM5_2A\", \"LnYUMM5_2B\"),\n                        \"LnYUMM6\" = c(\"LnYUMM6_2A\", \"LnYUMM6_2B\"),\n                        \"LnYUMMER4\" = c(\"LnYUMMER4_1A\", \"LnYUMMER4_1B\"),\n                        \"LnYUMMER7\" = c(\"LnYUMMER7_2A\", \"LnYUMMER7_2B\"),\n                        \"LnYUMMER8\" = c(\"LnYUMMER8_2A\", \"LnYUMMER8_2B\"))\n\n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(#\"Naïve CD8 T cells\" = c(\"0\",\"1\"),\n                        \"Naïve CD4 T cells\" = c(\"10\"),\n                        #\"Memory/stem like CD8 T cells\" = c(\"4\",\"14\"),\n                        \"Naive/memory/stem like CD8 T cells\" = c(\"0\",\"1\",\"4\",\"14\"),\n                        \"NK cells\" = c(\"3\"),\n                        #\"TGD\"=c(\"5\",\"13\"),\n                        \"regulatory T cells\" = c(\"7\", \"12\"),\n                        \"DCs/TGD\" = c(\"15\",\"2\",\"6\", \"8\", \"5\",\"13\"),\n                        \"LECs\" =c(\"16\"),\n                        \"B cells\" = c(\"9\", \"11\"),\n                        \"other\" = c(\"17\"))\n\n# check assignment\ntable(seurat$sample_pooled, seurat$cond)\n\n           \n            YUMM YUMMER\n  LnYUMM1   2026      0\n  LnYUMM2   1514      0\n  LnYUMM5   4602      0\n  LnYUMM6   1580      0\n  LnYUMMER4    0   8951\n  LnYUMMER7    0   6582\n  LnYUMMER8    0   6607\n\ntable(seurat$cond)\n\n\n  YUMM YUMMER \n  9722  22140 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)\nsaveRDS(sce, \"../../../data/sce_LN_CD45.rds\")\n\n\n\n\n\n\n\n# creating pseudobulks\nsummed &lt;- aggregateAcrossCells(sce,\n                               id=colData(sce)[,c(\"ident\", \"sample_pooled\")])\n# filter min cells\nsummed.filt &lt;- summed[,summed$ncells &gt;= 10]\nprint(table(summed.filt$cond, summed.filt$ident))\n\n        \n         0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n  YUMM   4 3 4 4 4 4 4 4 4 4  4  2  4  4  4  4  4  2\n  YUMMER 3 3 3 3 3 3 3 3 3 3  3  3  3  3  3  3  3  2\n\n# Model design\ndesign &lt;- model.matrix(~ cond, as.data.frame(colData(summed.filt)))\n\n# To specify the contrast/coef. Here we use condYUMMER. So we test for genes differentially expressed in YUMMER compared to YUMM. \ncolnames(design)\n\n[1] \"(Intercept)\" \"condYUMMER\" \n\n# Differential expression\n# --- I renamed this to be clear about the direction of the comparison ---#\nyummer_yumm &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$ident,\n    design=~cond,\n    coef=\"condYUMMER\",\n    condition=summed.filt$cond \n)\n\n\n# Number of DE genes per cluster in yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n   -1    0   1    NA\n0  47 5107 245  9182\n1  18 4920   6  9637\n10 28 3388  98 11067\n11  0 4799   1  9781\n12  5 3201  25 11350\n13  0 3287   3 11291\n14 20  633  10 13918\n15  3 2071   0 12507\n16  0  688   0 13893\n17  1  339   4 14237\n2  64 5402  32  9083\n3   1 5676   7  8897\n4  90 3772  94 10625\n5   0 5271   1  9309\n6  34 3334  35 11178\n7   2 5541   1  9037\n8  33 2405  16 12127\n9   0 2685   1 11895\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nde_yummer_yumm &lt;- write_de_res(yummer_yumm, res_nam = \"yummer_yumm\")\n\n\n\n\n\n# creating pseudobulks\nsummed_ct &lt;- aggregateAcrossCells(sce,\n                               id=colData(sce)[,c(\"cell_types\", \"sample_pooled\")])\n# filter min cells\nsummed_ct.filt &lt;- summed_ct[,summed_ct$ncells &gt;= 10]\nprint(table(summed_ct.filt$cond, summed_ct.filt$cell_types))\n\n        \n         Naive/memory/stem like CD8 T cells DCs/TGD NK cells regulatory T cells\n  YUMM                                    4       4        4                  4\n  YUMMER                                  3       3        3                  3\n        \n         B cells Naïve CD4 T cells LECs other\n  YUMM         4                 4    4     2\n  YUMMER       3                 3    3     2\n\n# Model design\ndesign &lt;- model.matrix(~ cond, as.data.frame(colData(summed_ct.filt)))\n\n# To specify the contrast/coef. Here we use condYUMMER. So we test for genes differentially expressed in YUMMER compared to YUMM. \ncolnames(design)\n\n[1] \"(Intercept)\" \"condYUMMER\" \n\n# Differential expression\n# --- I renamed this to be clear about the direction of the comparison ---#\nyummer_yumm_ct &lt;- pseudoBulkDGE(summed_ct.filt, \n    label=summed_ct.filt$cell_types,\n    design=~cond,\n    coef=\"condYUMMER\",\n    condition=summed_ct.filt$cond \n)\n\n\n# Number of DE genes per cluster in yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm_ct, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                                    -1    0   1    NA\nB cells                              0 5840   0  8741\nDCs/TGD                            287 9048 308  4938\nLECs                                 0  688   0 13893\nNaïve CD4 T cells                   28 3388  98 11067\nNaive/memory/stem like CD8 T cells  49 8155  70  6307\nNK cells                             1 5676   7  8897\nother                                1  339   4 14237\nregulatory T cells                   9 6682  22  7868\n\n#write as output\nct_res &lt;- yummer_yumm_ct\nnames(ct_res) &lt;- gsub(\" \", \"_\", names(ct_res))\nnames(ct_res) &lt;- gsub(\"/\", \"-\", names(ct_res))\n\nde_yummer_yumm_ct &lt;- write_de_res(ct_res, res_nam = \"yummer_yumm_ct\")\n\n\n\n\n\nyummer vs yumm all genes\n\n# yummer compared to reference condition yumm\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n# yummer compared to reference condition yumm\n\nplot_list &lt;- lapply(names(yummer_yumm_ct), \\(.) {\n  df = yummer_yumm_ct[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Cd4\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, ncol = 3) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"YUMM\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 20)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 10 \n\n\n\n\n\n\n\n#### 11 \n\n\n\n\n\n\n\n#### 12 \n\n\n\n\n\n\n\n#### 13 \n\n\n\n\n\n\n\n#### 14 \n\n\n\n\n\n\n\n#### 15 \n\n\n\n\n\n\n\n#### 16 \n\n\n\n\n\n\n\n#### 17 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n#### 8 \n\n\n\n\n\n\n\n#### 9 \n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- summed.filt[,colData(summed.filt)$ident %in% .]\n    mtx &lt;- counts(sub)\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 20)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    colnames(mtx_sub) &lt;- paste0(\"bulk_\", seq_along(1:ncol(sub)))\n    cd &lt;- data.frame(\"cond\" = sub$cond)\n    rownames(cd) &lt;- colnames(mtx_sub)\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"none\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 10 \n\n\n\n\n\n\n\n#### 11 \n\n\n\n\n\n\n\n#### 12 \n\n\n\n\n\n\n\n#### 13 \n\n\n\n\n\n\n\n#### 14 \n\n\n\n\n\n\n\n#### 15 \n\n\n\n\n\n\n\n#### 16 \n\n\n\n\n\n\n\n#### 17 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n#### 8 \n\n\n\n\n\n\n\n#### 9"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LN_CD45_almut.html#preamble",
    "href": "code/SNF_draft/DE/de_LN_CD45_almut.html#preamble",
    "title": "DE_LN_CD45",
    "section": "",
    "text": "library(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LN_CD45_almut.html#data-object",
    "href": "code/SNF_draft/DE/de_LN_CD45_almut.html#data-object",
    "title": "DE_LN_CD45",
    "section": "",
    "text": "seurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LN_tumor.rds\"))\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n\n# Pool samples\nseurat$sample_pooled &lt;- seurat$Sample |&gt; \n  forcats::fct_collapse(\"LnYUMM1\" = c(\"LnYUMM1_1A\", \"LnYUMM1_1B\"),\n                        \"LnYUMM2\" = c(\"LnYUMM2_1A\", \"LnYUMM2_1B\"),\n                        \"LnYUMM5\" = c(\"LnYUMM5_2A\", \"LnYUMM5_2B\"),\n                        \"LnYUMM6\" = c(\"LnYUMM6_2A\", \"LnYUMM6_2B\"),\n                        \"LnYUMMER4\" = c(\"LnYUMMER4_1A\", \"LnYUMMER4_1B\"),\n                        \"LnYUMMER7\" = c(\"LnYUMMER7_2A\", \"LnYUMMER7_2B\"),\n                        \"LnYUMMER8\" = c(\"LnYUMMER8_2A\", \"LnYUMMER8_2B\"))\n\n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(#\"Naïve CD8 T cells\" = c(\"0\",\"1\"),\n                        \"Naïve CD4 T cells\" = c(\"10\"),\n                        #\"Memory/stem like CD8 T cells\" = c(\"4\",\"14\"),\n                        \"Naive/memory/stem like CD8 T cells\" = c(\"0\",\"1\",\"4\",\"14\"),\n                        \"NK cells\" = c(\"3\"),\n                        #\"TGD\"=c(\"5\",\"13\"),\n                        \"regulatory T cells\" = c(\"7\", \"12\"),\n                        \"DCs/TGD\" = c(\"15\",\"2\",\"6\", \"8\", \"5\",\"13\"),\n                        \"LECs\" =c(\"16\"),\n                        \"B cells\" = c(\"9\", \"11\"),\n                        \"other\" = c(\"17\"))\n\n# check assignment\ntable(seurat$sample_pooled, seurat$cond)\n\n           \n            YUMM YUMMER\n  LnYUMM1   2026      0\n  LnYUMM2   1514      0\n  LnYUMM5   4602      0\n  LnYUMM6   1580      0\n  LnYUMMER4    0   8951\n  LnYUMMER7    0   6582\n  LnYUMMER8    0   6607\n\ntable(seurat$cond)\n\n\n  YUMM YUMMER \n  9722  22140 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)\nsaveRDS(sce, \"../../../data/sce_LN_CD45.rds\")"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LN_CD45_almut.html#de-analysis",
    "href": "code/SNF_draft/DE/de_LN_CD45_almut.html#de-analysis",
    "title": "DE_LN_CD45",
    "section": "",
    "text": "# creating pseudobulks\nsummed &lt;- aggregateAcrossCells(sce,\n                               id=colData(sce)[,c(\"ident\", \"sample_pooled\")])\n# filter min cells\nsummed.filt &lt;- summed[,summed$ncells &gt;= 10]\nprint(table(summed.filt$cond, summed.filt$ident))\n\n        \n         0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\n  YUMM   4 3 4 4 4 4 4 4 4 4  4  2  4  4  4  4  4  2\n  YUMMER 3 3 3 3 3 3 3 3 3 3  3  3  3  3  3  3  3  2\n\n# Model design\ndesign &lt;- model.matrix(~ cond, as.data.frame(colData(summed.filt)))\n\n# To specify the contrast/coef. Here we use condYUMMER. So we test for genes differentially expressed in YUMMER compared to YUMM. \ncolnames(design)\n\n[1] \"(Intercept)\" \"condYUMMER\" \n\n# Differential expression\n# --- I renamed this to be clear about the direction of the comparison ---#\nyummer_yumm &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$ident,\n    design=~cond,\n    coef=\"condYUMMER\",\n    condition=summed.filt$cond \n)\n\n\n# Number of DE genes per cluster in yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n   -1    0   1    NA\n0  47 5107 245  9182\n1  18 4920   6  9637\n10 28 3388  98 11067\n11  0 4799   1  9781\n12  5 3201  25 11350\n13  0 3287   3 11291\n14 20  633  10 13918\n15  3 2071   0 12507\n16  0  688   0 13893\n17  1  339   4 14237\n2  64 5402  32  9083\n3   1 5676   7  8897\n4  90 3772  94 10625\n5   0 5271   1  9309\n6  34 3334  35 11178\n7   2 5541   1  9037\n8  33 2405  16 12127\n9   0 2685   1 11895\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nde_yummer_yumm &lt;- write_de_res(yummer_yumm, res_nam = \"yummer_yumm\")\n\n\n\n\n\n# creating pseudobulks\nsummed_ct &lt;- aggregateAcrossCells(sce,\n                               id=colData(sce)[,c(\"cell_types\", \"sample_pooled\")])\n# filter min cells\nsummed_ct.filt &lt;- summed_ct[,summed_ct$ncells &gt;= 10]\nprint(table(summed_ct.filt$cond, summed_ct.filt$cell_types))\n\n        \n         Naive/memory/stem like CD8 T cells DCs/TGD NK cells regulatory T cells\n  YUMM                                    4       4        4                  4\n  YUMMER                                  3       3        3                  3\n        \n         B cells Naïve CD4 T cells LECs other\n  YUMM         4                 4    4     2\n  YUMMER       3                 3    3     2\n\n# Model design\ndesign &lt;- model.matrix(~ cond, as.data.frame(colData(summed_ct.filt)))\n\n# To specify the contrast/coef. Here we use condYUMMER. So we test for genes differentially expressed in YUMMER compared to YUMM. \ncolnames(design)\n\n[1] \"(Intercept)\" \"condYUMMER\" \n\n# Differential expression\n# --- I renamed this to be clear about the direction of the comparison ---#\nyummer_yumm_ct &lt;- pseudoBulkDGE(summed_ct.filt, \n    label=summed_ct.filt$cell_types,\n    design=~cond,\n    coef=\"condYUMMER\",\n    condition=summed_ct.filt$cond \n)\n\n\n# Number of DE genes per cluster in yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm_ct, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n                                    -1    0   1    NA\nB cells                              0 5840   0  8741\nDCs/TGD                            287 9048 308  4938\nLECs                                 0  688   0 13893\nNaïve CD4 T cells                   28 3388  98 11067\nNaive/memory/stem like CD8 T cells  49 8155  70  6307\nNK cells                             1 5676   7  8897\nother                                1  339   4 14237\nregulatory T cells                   9 6682  22  7868\n\n#write as output\nct_res &lt;- yummer_yumm_ct\nnames(ct_res) &lt;- gsub(\" \", \"_\", names(ct_res))\nnames(ct_res) &lt;- gsub(\"/\", \"-\", names(ct_res))\n\nde_yummer_yumm_ct &lt;- write_de_res(ct_res, res_nam = \"yummer_yumm_ct\")"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LN_CD45_almut.html#plot-results",
    "href": "code/SNF_draft/DE/de_LN_CD45_almut.html#plot-results",
    "title": "DE_LN_CD45",
    "section": "",
    "text": "yummer vs yumm all genes\n\n# yummer compared to reference condition yumm\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n# yummer compared to reference condition yumm\n\nplot_list &lt;- lapply(names(yummer_yumm_ct), \\(.) {\n  df = yummer_yumm_ct[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, )\n  }\n)\n\nwrap_plots(plot_list, ncol = 2) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Cd4\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, ncol = 3) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"YUMM\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 20)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 10 \n\n\n\n\n\n\n\n#### 11 \n\n\n\n\n\n\n\n#### 12 \n\n\n\n\n\n\n\n#### 13 \n\n\n\n\n\n\n\n#### 14 \n\n\n\n\n\n\n\n#### 15 \n\n\n\n\n\n\n\n#### 16 \n\n\n\n\n\n\n\n#### 17 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n#### 8 \n\n\n\n\n\n\n\n#### 9 \n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- summed.filt[,colData(summed.filt)$ident %in% .]\n    mtx &lt;- counts(sub)\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 20)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    colnames(mtx_sub) &lt;- paste0(\"bulk_\", seq_along(1:ncol(sub)))\n    cd &lt;- data.frame(\"cond\" = sub$cond)\n    rownames(cd) &lt;- colnames(mtx_sub)\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"none\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 10 \n\n\n\n\n\n\n\n#### 11 \n\n\n\n\n\n\n\n#### 12 \n\n\n\n\n\n\n\n#### 13 \n\n\n\n\n\n\n\n#### 14 \n\n\n\n\n\n\n\n#### 15 \n\n\n\n\n\n\n\n#### 16 \n\n\n\n\n\n\n\n#### 17 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n#### 8 \n\n\n\n\n\n\n\n#### 9"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html",
    "href": "code/SNF_draft/DE/de_LECs.html",
    "title": "DE_LECs",
    "section": "",
    "text": "Standard DE analysis using pseudobulk DE methods (note this differs from the FGCZ default analysis). We want to identify differentially expressed genes within LEC cluster between all groups of skin, YUMMER and YUMM.\n\n\n\nlibrary(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n\n\n\n\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  469    0      0\n  SkinLECs_Leukocytes2  669    0      0\n  TumorYUMM1_1A           0   17      0\n  TumorYUMM1_1B           0   18      0\n  TumorYUMM2_1A           0   57      0\n  TumorYUMM2_1B           0   49      0\n  TumorYUMM5_2A           0   44      0\n  TumorYUMM5_2B           0   44      0\n  TumorYUMM6_2A           0   58      0\n  TumorYUMM6_2B           0   72      0\n  TumorYUMMER3_1A         0    0     66\n  TumorYUMMER3_1B         0    0     44\n  TumorYUMMER4_1A         0    0     81\n  TumorYUMMER4_1B         0    0     68\n  TumorYUMMER7_2A         0    0     86\n  TumorYUMMER7_2B         0    0    101\n  TumorYUMMER8_2A         0    0    160\n  TumorYUMMER8_2B         0    0    135\n\nseurat$sample_pooled &lt;- seurat$Sample |&gt; \n  forcats::fct_collapse(\"TumorYUMM1\" = c(\"TumorYUMM1_1A\", \"TumorYUMM1_1B\"),\n                        \"TumorYUMM2\" = c(\"TumorYUMM2_1A\", \"TumorYUMM2_1B\"),\n                        \"TumorYUMM5\" = c(\"TumorYUMM5_2A\", \"TumorYUMM5_2B\"),\n                        \"TumorYUMM6\" = c(\"TumorYUMM6_2A\", \"TumorYUMM6_2B\"))\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1138    359    741 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)\n\n\n\n\n\ncond_de &lt;- function(cond1, cond2){\n  # subset sce\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"ident\", \"Sample\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 5]\n  print(table(summed.filt$cond, summed.filt$ident))\n  # de\n  design &lt;- model.matrix(~ 0 + factor(summed.filt$cond))\n  de.results &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$ident,\n    design=~factor(cond),\n    coef=ncol(design),\n    condition=summed.filt$cond \n)\n}\n\nskin_yumm &lt;- cond_de(\"skin\", \"YUMM\")\n\n      \n       0 1 2 3 4 5 6 7\n  skin 2 2 2 2 2 0 2 1\n  YUMM 6 4 5 3 3 6 1 5\n\nyummer_yumm &lt;- cond_de(\"YUMMER\", \"YUMM\")\n\n        \n         0 1 2 3 4 5 6 7\n  YUMM   6 4 5 3 3 6 1 5\n  YUMMER 8 5 8 8 6 7 5 2\n\nskin_yummer &lt;- cond_de(\"skin\",\"YUMMER\")\n\n        \n         0 1 2 3 4 5 6 7\n  skin   2 2 2 2 2 0 2 1\n  YUMMER 8 5 8 8 6 7 5 2\n\n#DE skin_yumm\nis.de &lt;- decideTestsPerLabel(skin_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0   1    NA\n0 79 1216  56 11727\n1 13  538  11 12516\n2 64  773  26 12215\n3 52  444  32 12550\n4  8  623   8 12439\n6 59 1663  42 11314\n7 44  749 131 12154\n\n#DE yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0  1    NA\n0  1 1155 15 11907\n1  1  453  2 12622\n2  6  999 11 12062\n3  0 1985 13 11080\n4  1  722  4 12351\n5  3  529 10 12536\n6  9 1403  1 11665\n7  0  670  4 12404\n\n#DE skin_yummer\nis.de &lt;- decideTestsPerLabel(skin_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n   -1    0   1    NA\n0 193 2059 168 10658\n1  29 1262  26 11761\n2 216 1755 152 10955\n3 284 2497 297 10000\n4  10  992  18 12058\n6 114 1566  93 11305\n7  44  456  94 12484\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path until DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/LEC_\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nde_skin_yumm &lt;- write_de_res(skin_yumm, res_nam = \"skin_yumm\")\nde_skin_yumm &lt;- write_de_res(yummer_yumm, res_nam = \"yummer_yumm\")\nde_skin_yumm &lt;- write_de_res(skin_yummer, res_nam = \"skin_yummer\")\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"YUMM\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#preamble",
    "href": "code/SNF_draft/DE/de_LECs.html#preamble",
    "title": "DE_LECs",
    "section": "",
    "text": "library(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#data-object",
    "href": "code/SNF_draft/DE/de_LECs.html#data-object",
    "title": "DE_LECs",
    "section": "",
    "text": "seurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  469    0      0\n  SkinLECs_Leukocytes2  669    0      0\n  TumorYUMM1_1A           0   17      0\n  TumorYUMM1_1B           0   18      0\n  TumorYUMM2_1A           0   57      0\n  TumorYUMM2_1B           0   49      0\n  TumorYUMM5_2A           0   44      0\n  TumorYUMM5_2B           0   44      0\n  TumorYUMM6_2A           0   58      0\n  TumorYUMM6_2B           0   72      0\n  TumorYUMMER3_1A         0    0     66\n  TumorYUMMER3_1B         0    0     44\n  TumorYUMMER4_1A         0    0     81\n  TumorYUMMER4_1B         0    0     68\n  TumorYUMMER7_2A         0    0     86\n  TumorYUMMER7_2B         0    0    101\n  TumorYUMMER8_2A         0    0    160\n  TumorYUMMER8_2B         0    0    135\n\nseurat$sample_pooled &lt;- seurat$Sample |&gt; \n  forcats::fct_collapse(\"TumorYUMM1\" = c(\"TumorYUMM1_1A\", \"TumorYUMM1_1B\"),\n                        \"TumorYUMM2\" = c(\"TumorYUMM2_1A\", \"TumorYUMM2_1B\"),\n                        \"TumorYUMM5\" = c(\"TumorYUMM5_2A\", \"TumorYUMM5_2B\"),\n                        \"TumorYUMM6\" = c(\"TumorYUMM6_2A\", \"TumorYUMM6_2B\"))\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1138    359    741 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#de-analysis",
    "href": "code/SNF_draft/DE/de_LECs.html#de-analysis",
    "title": "DE_LECs",
    "section": "",
    "text": "cond_de &lt;- function(cond1, cond2){\n  # subset sce\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"ident\", \"Sample\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 5]\n  print(table(summed.filt$cond, summed.filt$ident))\n  # de\n  design &lt;- model.matrix(~ 0 + factor(summed.filt$cond))\n  de.results &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$ident,\n    design=~factor(cond),\n    coef=ncol(design),\n    condition=summed.filt$cond \n)\n}\n\nskin_yumm &lt;- cond_de(\"skin\", \"YUMM\")\n\n      \n       0 1 2 3 4 5 6 7\n  skin 2 2 2 2 2 0 2 1\n  YUMM 6 4 5 3 3 6 1 5\n\nyummer_yumm &lt;- cond_de(\"YUMMER\", \"YUMM\")\n\n        \n         0 1 2 3 4 5 6 7\n  YUMM   6 4 5 3 3 6 1 5\n  YUMMER 8 5 8 8 6 7 5 2\n\nskin_yummer &lt;- cond_de(\"skin\",\"YUMMER\")\n\n        \n         0 1 2 3 4 5 6 7\n  skin   2 2 2 2 2 0 2 1\n  YUMMER 8 5 8 8 6 7 5 2\n\n#DE skin_yumm\nis.de &lt;- decideTestsPerLabel(skin_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0   1    NA\n0 79 1216  56 11727\n1 13  538  11 12516\n2 64  773  26 12215\n3 52  444  32 12550\n4  8  623   8 12439\n6 59 1663  42 11314\n7 44  749 131 12154\n\n#DE yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0  1    NA\n0  1 1155 15 11907\n1  1  453  2 12622\n2  6  999 11 12062\n3  0 1985 13 11080\n4  1  722  4 12351\n5  3  529 10 12536\n6  9 1403  1 11665\n7  0  670  4 12404\n\n#DE skin_yummer\nis.de &lt;- decideTestsPerLabel(skin_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n   -1    0   1    NA\n0 193 2059 168 10658\n1  29 1262  26 11761\n2 216 1755 152 10955\n3 284 2497 297 10000\n4  10  992  18 12058\n6 114 1566  93 11305\n7  44  456  94 12484\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path until DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/LEC_\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nde_skin_yumm &lt;- write_de_res(skin_yumm, res_nam = \"skin_yumm\")\nde_skin_yumm &lt;- write_de_res(yummer_yumm, res_nam = \"yummer_yumm\")\nde_skin_yumm &lt;- write_de_res(skin_yummer, res_nam = \"skin_yummer\")"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#plot-results",
    "href": "code/SNF_draft/DE/de_LECs.html#plot-results",
    "title": "DE_LECs",
    "section": "",
    "text": "plot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"YUMM\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7"
  }
]
[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "YUMM –&gt; cold tumor YUMMER –&gt; hot tumor/very active immune response"
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html",
    "title": "vis_de",
    "section": "",
    "text": "Different visualization of the results from clusterwise DE analysis between merged LECs in all YUMM and YUMMER sample. DE was performed as part of a preliminary analysis of BD RHapsody sequencing data conducted by the FCGZ.\n\n\n\nPreliminary analysis identified 7 cluster. That is probably to many. We would expect 3-5 different LEC subpopulations. Ultimately we will probably recluster or merge cluster based on marker gene expression before DE analysis is conducted.\nThere are 2 result gene lists:\n\nConserved marker: Cluster marker genes (DE compared to other cluster) conserved across conditions. Cluster marker that are independent of the tumor type. These can be used to characterize/annotate cluster within the merged/integrated dataset.\nDE genes: Differentially expressed genes between conditions (YUMM vs YUMMER) within each cluster (“Celltype-specific changes”).\n\nMeaning in output table:\n\ncondition_pct.1: percentage of cells where the gene is detected in the cluster for condition\ncondition_pct.2: percentage of cells where the gene is detected on average in the other clusters for condition\n\n\n\n\n\n\nDo we expect specific LEC subtypes to change more between tumor types or do we expect more global changes across all LECs? It could be worth running a DE analysis for all LECs between the tumor types if the later is the case.\nDifferential abundance analysis: Do we expect a gloabl shift in LEC abundance or a subtype-specific shift?\n\n\n\n\n\nlibrary(edgeR)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(readxl)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nseurat &lt;- readRDS(file.path(\"..\", \"..\", \"..\", \"data\", \"scData_LEC_tumor.rds\"))\nDefaultAssay(seurat) &lt;- \"SCT\"\nde_genes &lt;- read_excel(file.path(\"..\", \"..\", \"..\", \"data\", \"diffGenes_yumm_yummer.xlsx\"))\n\n\n\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1) {\n  EnhancedVolcano(df, \n    x = \"avg_log2FC\", y = \"p_val_adj\",\n    FCcutoff = lfc, pCutoff = fdr,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = df[[\"gene\"]], labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[top$gene,])\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n.feature_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- FeaturePlot(seurat, features = top$gene, split.by = 'Condition',\n              max.cutoff = 3, cols = c('grey', 'red'))\n  p\n  }\n}\n\n.violin_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- VlnPlot(seurat, features = top$gene, split.by = 'Condition',\n              group.by = \"ident\", pt.size = 0, combine = FALSE)\n  wrap_plots(plots = p, ncol = 1)\n  }\n}\n\n\n\n\n\n\nTo get an overview of the distribution of cluster in 2d.\n\nDimPlot(seurat, label = TRUE)\n\n\n\n\n\n\nPlot most differentially expressed genes as volcano plot. We don’t have stats for all, but only DE genes (yet). This explains the shape of the volcano.\n\n\nCode\ncluster &lt;- levels(as.factor(de_genes$cluster))\n\n\n\n01234567\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\nWarning: ggrepel: 18 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\n\n\nShow the expression of the top cluster-specific DE genes on the UMAP plot\n\n01234567\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\nThe same as above, but as violin plot to better see expression level\n\n01234567\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\nThe default behaviour of split.by has changed.\nSeparate violin plots are now plotted side-by-side.\nTo restore the old behaviour of a single split violin,\nset split.plot = TRUE.\n      \nThis message will be shown once per session.\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\nCode\npurrr::map(cluster, \\(c) {\n      de_c &lt;- de_genes |&gt; \n        filter(cluster %in% c)\n      sub &lt;- subset(x = seurat, idents = c)\n      mtx &lt;- GetAssayData(object = sub, slot = 'data')\n      cd &lt;- data.frame(sub[[]] |&gt; select('Condition'))\n      .heatmap(mtx, de_c, cd, title = paste0('DE YUMM vs YUMMER in ', c),\n        fdr = 0.1, n_lfc = 20)\n})\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n[1] \"No de genes\"\n\n[[4]]\n\n[[5]]\n\n[[6]]\n\n[[7]]\n\n[[8]]\n[1] \"No de genes\""
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#preamble",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#preamble",
    "title": "vis_de",
    "section": "",
    "text": "library(edgeR)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(readxl)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nseurat &lt;- readRDS(file.path(\"..\", \"..\", \"..\", \"data\", \"scData_LEC_tumor.rds\"))\nDefaultAssay(seurat) &lt;- \"SCT\"\nde_genes &lt;- read_excel(file.path(\"..\", \"..\", \"..\", \"data\", \"diffGenes_yumm_yummer.xlsx\"))\n\n\n\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1) {\n  EnhancedVolcano(df, \n    x = \"avg_log2FC\", y = \"p_val_adj\",\n    FCcutoff = lfc, pCutoff = fdr,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = df[[\"gene\"]], labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[top$gene,])\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n.feature_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- FeaturePlot(seurat, features = top$gene, split.by = 'Condition',\n              max.cutoff = 3, cols = c('grey', 'red'))\n  p\n  }\n}\n\n.violin_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- VlnPlot(seurat, features = top$gene, split.by = 'Condition',\n              group.by = \"ident\", pt.size = 0, combine = FALSE)\n  wrap_plots(plots = p, ncol = 1)\n  }\n}"
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#visualization",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#visualization",
    "title": "vis_de",
    "section": "",
    "text": "To get an overview of the distribution of cluster in 2d.\n\nDimPlot(seurat, label = TRUE)\n\n\n\n\n\n\nPlot most differentially expressed genes as volcano plot. We don’t have stats for all, but only DE genes (yet). This explains the shape of the volcano.\n\n\nCode\ncluster &lt;- levels(as.factor(de_genes$cluster))\n\n\n\n01234567\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\nWarning: ggrepel: 18 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\n\n\nShow the expression of the top cluster-specific DE genes on the UMAP plot\n\n01234567\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\nThe same as above, but as violin plot to better see expression level\n\n01234567\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\nThe default behaviour of split.by has changed.\nSeparate violin plots are now plotted side-by-side.\nTo restore the old behaviour of a single split violin,\nset split.plot = TRUE.\n      \nThis message will be shown once per session.\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\nCode\npurrr::map(cluster, \\(c) {\n      de_c &lt;- de_genes |&gt; \n        filter(cluster %in% c)\n      sub &lt;- subset(x = seurat, idents = c)\n      mtx &lt;- GetAssayData(object = sub, slot = 'data')\n      cd &lt;- data.frame(sub[[]] |&gt; select('Condition'))\n      .heatmap(mtx, de_c, cd, title = paste0('DE YUMM vs YUMMER in ', c),\n        fdr = 0.1, n_lfc = 20)\n})\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n[1] \"No de genes\"\n\n[[4]]\n\n[[5]]\n\n[[6]]\n\n[[7]]\n\n[[8]]\n[1] \"No de genes\""
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "The experiment consist of 3 main factors of interest:\n\nsample origin: tumor, skin, lymph node\nmain cell type class: leucocytes, LECs\ntumor type: YUMM, YUMMER\n\nAs a first check we are interested in the expression of specific marker genes/known marker and how they vary across combinations of these factors.\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(gridExtra)\n\nlibrary(ggrepel)\n\n\n\n\nFrom the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 3 - Integrated tumor and skin leukocytes.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_all_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1 1510    0      0\n  SkinLECs_Leukocytes2 2351    0      0\n  TumorYUMM1_1A           0  664      0\n  TumorYUMM1_1B           0  586      0\n  TumorYUMM2_1A           0 1886      0\n  TumorYUMM2_1B           0 1652      0\n  TumorYUMM5_2A           0 1829      0\n  TumorYUMM5_2B           0 1603      0\n  TumorYUMM6_2A           0 2380      0\n  TumorYUMM6_2B           0 2267      0\n  TumorYUMMER3_1A         0    0   1031\n  TumorYUMMER3_1B         0    0    887\n  TumorYUMMER4_1A         0    0   1442\n  TumorYUMMER4_1B         0    0   1234\n  TumorYUMMER7_2A         0    0   2015\n  TumorYUMMER7_2B         0    0   1898\n  TumorYUMMER8_2A         0    0   2593\n  TumorYUMMER8_2B         0    0   2379\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  3861  12867  13479 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"monocytes/macrophages\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"DCs\" = c(\"4\", \"12\", \"19\"),\n                        \"CD4 T cells\" = c(\"10\"),\n                        \"CD8 T cells\" = c(\"7\", \"16\"),\n                        \"other T cells\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"endothelial cells/fibroblasts\" = c(\"8\", \"9\", \"13\"),\n                        \"mast cells\" = c(\"14\"),\n                        \"B cells\" = c(\"21\"),\n                        \"other\" = c(\"17\", \"20\"))\n\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\")\n\n\n\n\n\n\n\n# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4942.\n2 YUMMER    4687.\n3 skin      5856.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1960.\n2 YUMMER     1872.\n3 skin       2199.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, y=n_cells, x=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n#Almut please put number of clusters inside the plot\n\n\n\n\n\nDimPlot(seurat, group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCluster\nGenes\nCluster\nGenes\nCluster\nGenes\n\n\n0 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgax, Csf2rb, Il1r2\n9 - LECs\nProx1, Pecam1\n18 - Macrophages\nCxcr4, Il1a, CD80, Csf3r, Il1r2\n\n\n1 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgam\n10 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n19 - DCs\nCd74, H2-Ab1, H2-Aa\n\n\n2 - Granulocytes\nNotch2, Itgax, CD80, Csf2rb, Il1r2\n11 - TGD\nCd3e, Tcf7, Trdc\n20 -Keratinocytes\nKrt15, Krt5\n\n\n3 - TGD\nTcf7, Lef1, Sell, Tigit, Trdc\n12 - DC\nCCR7, Il12b, CD80, Csf2rb\n21 - B cells\nCD19, Cd79a\n\n\n4 - cDC2\nNotch2, Itgam\n13 - Fibroblasts\nacta2, Pdgfrb\n22 - Monocytes\nItgax\n\n\n5 - Macrophages\nNotch2, Itgax, Itgam, Csf2rb\n14 - Mast cells\nNotch2, Csf2rb, Cd63\n23 - TGD\nTcf7, Trdc\n\n\n6 - Monocytes\nItgam\n15 - T cells\nCd3e, Tcf7, Cxcr4,\n24 - T cells\nCcl3, Ccl4\n\n\n7 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1\n16 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Ctla4\n\n\n\n\n8 - LECs\nNotch2, Prox1, Pecam1\n17 - Osteoclasts\nCtsk\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"cell_types\"\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) \n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"ident\"\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster7_seurat &lt;- subset(seurat, idents = 7)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster7_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster16_seurat &lt;- subset(seurat, idents = 16)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster16_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#preamble",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#preamble",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(forcats)\nlibrary(gridExtra)\n\nlibrary(ggrepel)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#data-objects",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#data-objects",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "From the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 3 - Integrated tumor and skin leukocytes.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_all_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1 1510    0      0\n  SkinLECs_Leukocytes2 2351    0      0\n  TumorYUMM1_1A           0  664      0\n  TumorYUMM1_1B           0  586      0\n  TumorYUMM2_1A           0 1886      0\n  TumorYUMM2_1B           0 1652      0\n  TumorYUMM5_2A           0 1829      0\n  TumorYUMM5_2B           0 1603      0\n  TumorYUMM6_2A           0 2380      0\n  TumorYUMM6_2B           0 2267      0\n  TumorYUMMER3_1A         0    0   1031\n  TumorYUMMER3_1B         0    0    887\n  TumorYUMMER4_1A         0    0   1442\n  TumorYUMMER4_1B         0    0   1234\n  TumorYUMMER7_2A         0    0   2015\n  TumorYUMMER7_2B         0    0   1898\n  TumorYUMMER8_2A         0    0   2593\n  TumorYUMMER8_2B         0    0   2379\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  3861  12867  13479 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"monocytes/macrophages\" = c(\"0\",\"1\",\"2\",\"5\",\"6\",\"18\",\"22\"),\n                        \"DCs\" = c(\"4\", \"12\", \"19\"),\n                        \"CD4 T cells\" = c(\"10\"),\n                        \"CD8 T cells\" = c(\"7\", \"16\"),\n                        \"other T cells\" = c(\"3\", \"11\", \"15\", \"23\", \"24\"),\n                        \"endothelial cells/fibroblasts\" = c(\"8\", \"9\", \"13\"),\n                        \"mast cells\" = c(\"14\"),\n                        \"B cells\" = c(\"21\"),\n                        \"other\" = c(\"17\", \"20\"))\n\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#overview",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#overview",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4942.\n2 YUMMER    4687.\n3 skin      5856.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1960.\n2 YUMMER     1872.\n3 skin       2199.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, y=n_cells, x=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n#Almut please put number of clusters inside the plot\n\n\n\n\n\nDimPlot(seurat, group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\", \n        label = T) + \n  ggtitle(\"\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#cluster-marker-gene-expression",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#cluster-marker-gene-expression",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "Cluster\nGenes\nCluster\nGenes\nCluster\nGenes\n\n\n0 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgax, Csf2rb, Il1r2\n9 - LECs\nProx1, Pecam1\n18 - Macrophages\nCxcr4, Il1a, CD80, Csf3r, Il1r2\n\n\n1 - Monocytes/\nMacrophages\nCxcr4, Notch2, Itgam\n10 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n19 - DCs\nCd74, H2-Ab1, H2-Aa\n\n\n2 - Granulocytes\nNotch2, Itgax, CD80, Csf2rb, Il1r2\n11 - TGD\nCd3e, Tcf7, Trdc\n20 -Keratinocytes\nKrt15, Krt5\n\n\n3 - TGD\nTcf7, Lef1, Sell, Tigit, Trdc\n12 - DC\nCCR7, Il12b, CD80, Csf2rb\n21 - B cells\nCD19, Cd79a\n\n\n4 - cDC2\nNotch2, Itgam\n13 - Fibroblasts\nacta2, Pdgfrb\n22 - Monocytes\nItgax\n\n\n5 - Macrophages\nNotch2, Itgax, Itgam, Csf2rb\n14 - Mast cells\nNotch2, Csf2rb, Cd63\n23 - TGD\nTcf7, Trdc\n\n\n6 - Monocytes\nItgam\n15 - T cells\nCd3e, Tcf7, Cxcr4,\n24 - T cells\nCcl3, Ccl4\n\n\n7 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1\n16 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Ctla4\n\n\n\n\n8 - LECs\nNotch2, Prox1, Pecam1\n17 - Osteoclasts\nCtsk\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"cell_types\"\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#conditional-marker-expression",
    "href": "code/SNF_draft/EDA/vis_tumor_CD45_all.html#conditional-marker-expression",
    "title": "vis_tumor_CD45_leukocytes",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1)) \n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nIdents(seurat) &lt;- \"ident\"\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster7_seurat &lt;- subset(seurat, idents = 7)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster7_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster16_seurat &lt;- subset(seurat, idents = 16)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster16_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LECs_tumor",
    "section": "",
    "text": "Study LEC migration within lymphatic system in the context of “hot” and “cold” tumor"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "The experiment consist of 3 main factors of interest:\n\nsample origin: tumor, skin, lymph node\nmain cell type class: leucocytes, LECs\ntumor type: YUMM, YUMMER\n\nAs a first check we are interested in the expression of specific marker genes/known marker and how they vary across combinations of these factors.\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nFrom the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 2 - Integrated tumor and skin LECs.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\nseurat &lt;- subset(seurat, idents = '5', invert = TRUE)\nseurat$ident &lt;- droplevels(seurat$ident)\nlevels(seurat$ident) &lt;- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\")\nseurat &lt;- RenameIdents(object = seurat, `6` = \"5\")\nseurat &lt;- RenameIdents(object = seurat, `7` = \"6\")\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  467    0      0\n  SkinLECs_Leukocytes2  667    0      0\n  TumorYUMM1_1A           0   11      0\n  TumorYUMM1_1B           0   10      0\n  TumorYUMM2_1A           0   41      0\n  TumorYUMM2_1B           0   31      0\n  TumorYUMM5_2A           0   40      0\n  TumorYUMM5_2B           0   41      0\n  TumorYUMM6_2A           0   49      0\n  TumorYUMM6_2B           0   59      0\n  TumorYUMMER3_1A         0    0     59\n  TumorYUMMER3_1B         0    0     37\n  TumorYUMMER4_1A         0    0     74\n  TumorYUMMER4_1B         0    0     64\n  TumorYUMMER7_2A         0    0     78\n  TumorYUMMER7_2B         0    0     83\n  TumorYUMMER8_2A         0    0    147\n  TumorYUMMER8_2B         0    0    129\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1134    282    671 \n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Prox1\", \"Pdpn\", \"Ackr4\", \"Foxp2\", \"Cldn11\", \"Alcam\", \"Esam\", \"Cd24a\", \"Lyve1\", \"Ptx3\", \"Mrc1\", \"Ackr2\", \"Ccl21a\", \"Reln\", \"Mmrn1\", \"Mki67\", \"Aurkb\", \"Jam2\", \"Flt1\", \"Plvap\")\n\ncond_marker &lt;- c(\"Lyve1\", \"Ptx3\", \"Cldn11\", \"Mrc1\", \"Ackr2\", \"Icam1\", \"Vcam1\", \"Sema3a\", \"Nectin2\", \"Cd274\", \"Cxcl12\", \"Ccl21a\", \"Stat1\")\n\n\n\n\n\n\n\n# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4952.\n2 YUMMER    5113.\n3 skin      5432.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       2096.\n2 YUMMER     2177.\n3 skin       2211.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, ident) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(cond_dat, aes(fill=ident, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", split.by = \"cond\", reduction = \"umap\") + ggtitle(\"\")\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#preamble",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#preamble",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#data-objects",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#data-objects",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "From the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 2 - Integrated tumor and skin LECs.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\nseurat &lt;- subset(seurat, idents = '5', invert = TRUE)\nseurat$ident &lt;- droplevels(seurat$ident)\nlevels(seurat$ident) &lt;- c(\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\")\nseurat &lt;- RenameIdents(object = seurat, `6` = \"5\")\nseurat &lt;- RenameIdents(object = seurat, `7` = \"6\")\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  467    0      0\n  SkinLECs_Leukocytes2  667    0      0\n  TumorYUMM1_1A           0   11      0\n  TumorYUMM1_1B           0   10      0\n  TumorYUMM2_1A           0   41      0\n  TumorYUMM2_1B           0   31      0\n  TumorYUMM5_2A           0   40      0\n  TumorYUMM5_2B           0   41      0\n  TumorYUMM6_2A           0   49      0\n  TumorYUMM6_2B           0   59      0\n  TumorYUMMER3_1A         0    0     59\n  TumorYUMMER3_1B         0    0     37\n  TumorYUMMER4_1A         0    0     74\n  TumorYUMMER4_1B         0    0     64\n  TumorYUMMER7_2A         0    0     78\n  TumorYUMMER7_2B         0    0     83\n  TumorYUMMER8_2A         0    0    147\n  TumorYUMMER8_2B         0    0    129\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1134    282    671 \n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Prox1\", \"Pdpn\", \"Ackr4\", \"Foxp2\", \"Cldn11\", \"Alcam\", \"Esam\", \"Cd24a\", \"Lyve1\", \"Ptx3\", \"Mrc1\", \"Ackr2\", \"Ccl21a\", \"Reln\", \"Mmrn1\", \"Mki67\", \"Aurkb\", \"Jam2\", \"Flt1\", \"Plvap\")\n\ncond_marker &lt;- c(\"Lyve1\", \"Ptx3\", \"Cldn11\", \"Mrc1\", \"Ackr2\", \"Icam1\", \"Vcam1\", \"Sema3a\", \"Nectin2\", \"Cd274\", \"Cxcl12\", \"Ccl21a\", \"Stat1\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#overview",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#overview",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 3 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      4952.\n2 YUMMER    5113.\n3 skin      5432.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 3 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       2096.\n2 YUMMER     2177.\n3 skin       2211.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, ident) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nggplot(cond_dat, aes(fill=ident, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", split.by = \"cond\", reduction = \"umap\") + ggtitle(\"\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#cluster-marker-gene-expression",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#cluster-marker-gene-expression",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#conditional-marker-expression",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#conditional-marker-expression",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "The experiment consist of 3 main factors of interest:\n\nsample origin: tumor, skin, lymph node\nmain cell type class: leucocytes, LECs\ntumor type: YUMM, YUMMER\n\nAs a first check we are interested in the expression of specific marker genes/known marker and how they vary across combinations of these factors.\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\n#library(SingleCellExperiment)\nlibrary(gridExtra)\n\nlibrary(ggrepel)\n\n\n\n\nFrom the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 4 - All leukocytes from LN in tumor samples.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LN_tumor.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n              \n               YUMM YUMMER\n  LnYUMM1_1A   1064      0\n  LnYUMM1_1B    962      0\n  LnYUMM2_1A    821      0\n  LnYUMM2_1B    693      0\n  LnYUMM5_2A   2366      0\n  LnYUMM5_2B   2236      0\n  LnYUMM6_2A    766      0\n  LnYUMM6_2B    814      0\n  LnYUMMER4_1A    0   4809\n  LnYUMMER4_1B    0   4142\n  LnYUMMER7_2A    0   3324\n  LnYUMMER7_2B    0   3258\n  LnYUMMER8_2A    0   3366\n  LnYUMMER8_2B    0   3241\n\ntable(seurat$cond)\n\n\n  YUMM YUMMER \n  9722  22140 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"Naïve CD8 T cells\" = c(\"0\",\"1\"),\n                        \"Naïve CD4 T cells\" = c(\"10\"),\n                        \"Memory/stem like CD8 T cells\" = c(\"4\",\"14\"),\n                        \"NK cells\" = c(\"3\"),\n                        \"TGD\"=c(\"5\",\"13\"),\n                        \"regulatory T cells\" = c(\"7\", \"12\"),\n                        \"DCs\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"LECs\" =c(\"16\"),\n                        \"B cells\" = c(\"9\", \"11\"),\n                        \"other\" = c(\"17\"))\n\nseurat$cell_types_nr &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"0\" = c(\"0\",\"1\"),\n                        \"1\" = c(\"10\"),\n                        \"2\" = c(\"4\",\"14\"),\n                        \"3\" = c(\"3\"),\n                        \"4\"=c(\"5\",\"13\"),\n                        \"5\" = c(\"7\", \"12\"),\n                        \"6\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"7\" =c(\"16\"),\n                        \"8\" = c(\"9\", \"11\"),\n                        \"9\" = c(\"17\"))\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Ptprc\", \"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\", \"Cxcr3\", \"Fcgr1\", \"Fcgr3\", \"Ncam1\", \"Cd24a\", \"Klrb1c\", \"Cd62l\", \"Ly6c1\", \"Adgre1\", \"Cd44\", \"Nrp1\", \"Lag3\", \"Il2ra\", \"Icos\", \"Klf2\", \"Il7r\", \"Ifng\", \"Prf1\", \"Cd244a\", \"Cd160\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\", \"Ifng\")\n\n\n\n\n\n\n\n# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 2 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      2468.\n2 YUMMER    2635.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 2 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1241.\n2 YUMMER     1320.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\ncond_dat_nr &lt;- seurat[[]] |&gt; group_by(cond, cell_types_nr) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\nggplot(cond_dat_nr, aes(fill=cell_types_nr, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types_nr\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCluster\nGenes\nCluster\nGenes\n\n\n0 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n9 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n1 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n10 - naive CD4 T cells\nCd3e, Cd4, Tsf7\n\n\n2 - Monocytes\nCcr7, Csf2rb, Cd63\n11 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n3 - NK cells\nTsf7, Sell, Itgax, Klra8\n12 - T regs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n\n\n4 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1, Ctla4\n13 - TGD\nCd3e, Trdc, Tsf7\n\n\n5 - TGD\nCd3e, Tsf7, Sell, Trdc\n14 - CD8 T cells\nCd3e, Cd8a\n\n\n6 - Granulocytes\nTcf7, Ccr7, Csf2rb, Cd74, H2-Ab1, H2-Aa, Cd63\n15 - DCs\nItgax, Itgam, Csf2rb, Il1r2, Cd74, H2-Aa, H2-Ab1\n\n\n7 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n16 - LECs\nProx1, Pecam1\n\n\n8 - Granulocytes\nCcr7, Cd80, Csf2rb, Cd63\n17 - T cells\nCD4, Sell\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = c(dims, \"ident\", features),\n: The following requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 2, assay = \"SCT\", add.noise = F)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, slot = slot): The\nfollowing requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, cells = cells):\nThe following requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 2, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster0_seurat &lt;- subset(seurat, idents = 0)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster0_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster5_seurat &lt;- subset(seurat, idents = 5)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster5_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#preamble",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#preamble",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\n#library(SingleCellExperiment)\nlibrary(gridExtra)\n\nlibrary(ggrepel)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#data-objects",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#data-objects",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "From the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 4 - All leukocytes from LN in tumor samples.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LN_tumor.rds\"))\n#### --------------------------------------------------------- #####\n\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n              \n               YUMM YUMMER\n  LnYUMM1_1A   1064      0\n  LnYUMM1_1B    962      0\n  LnYUMM2_1A    821      0\n  LnYUMM2_1B    693      0\n  LnYUMM5_2A   2366      0\n  LnYUMM5_2B   2236      0\n  LnYUMM6_2A    766      0\n  LnYUMM6_2B    814      0\n  LnYUMMER4_1A    0   4809\n  LnYUMMER4_1B    0   4142\n  LnYUMMER7_2A    0   3324\n  LnYUMMER7_2B    0   3258\n  LnYUMMER8_2A    0   3366\n  LnYUMMER8_2B    0   3241\n\ntable(seurat$cond)\n\n\n  YUMM YUMMER \n  9722  22140 \n\nseurat$cell_types &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"Naïve CD8 T cells\" = c(\"0\",\"1\"),\n                        \"Naïve CD4 T cells\" = c(\"10\"),\n                        \"Memory/stem like CD8 T cells\" = c(\"4\",\"14\"),\n                        \"NK cells\" = c(\"3\"),\n                        \"TGD\"=c(\"5\",\"13\"),\n                        \"regulatory T cells\" = c(\"7\", \"12\"),\n                        \"DCs\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"LECs\" =c(\"16\"),\n                        \"B cells\" = c(\"9\", \"11\"),\n                        \"other\" = c(\"17\"))\n\nseurat$cell_types_nr &lt;- seurat$ident |&gt; \n  as.factor() |&gt; \n  forcats::fct_collapse(\"0\" = c(\"0\",\"1\"),\n                        \"1\" = c(\"10\"),\n                        \"2\" = c(\"4\",\"14\"),\n                        \"3\" = c(\"3\"),\n                        \"4\"=c(\"5\",\"13\"),\n                        \"5\" = c(\"7\", \"12\"),\n                        \"6\" = c(\"15\",\"2\",\"6\", \"8\"),\n                        \"7\" =c(\"16\"),\n                        \"8\" = c(\"9\", \"11\"),\n                        \"9\" = c(\"17\"))\n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Ptprc\", \"Cd3e\", \"Cd8a\", \"Cd4\" ,\"Tcf7\", \"Lef1\", \"Pdcd1\", \"Sell\", \"Tigit\", \"Cxcr4\", \"Ccr7\", \"Foxp3\", \"Ctla4\", \"Trdc\", \"Il12b\", \"Itgae\", \"Xcr1\", \"Cd207\", \"Notch2\", \"Itgax\", \"Itgam\", \"Il1a\", \"Cd80\", \"Cd19\", \"Prox1\", \"Pecam1\", \"Csf2rb\", \"Csf3r\", \"Il1r2\", \"Acta2\", \"Pdgfrb\", \"Ctsk\", \"Cd74\", \"H2-Ab1\", \"H2-Aa\", \"Krt15\", \"Krt5\", \"Cd79a\", \"Ccl3\", \"Ccl4\", \"Cd63\", \"Cxcr3\", \"Fcgr1\", \"Fcgr3\", \"Ncam1\", \"Cd24a\", \"Klrb1c\", \"Cd62l\", \"Ly6c1\", \"Adgre1\", \"Cd44\", \"Nrp1\", \"Lag3\", \"Il2ra\", \"Icos\", \"Klf2\", \"Il7r\", \"Ifng\", \"Prf1\", \"Cd244a\", \"Cd160\")\n\ncond_marker &lt;- c(\"Cd3e\", \"Cd8a\", \"Cd4\", \"Tcf7\", \"Lef1\", \"Pdcd1\", \"Foxp3\", \"Cxcr4\", \"Ifng\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#overview",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#overview",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "# mean molecules/group\nmean_mol &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_mol = mean(nCount_RNA))\nmean_mol\n\n# A tibble: 2 × 2\n  cond   mean_mol\n  &lt;chr&gt;     &lt;dbl&gt;\n1 YUMM      2468.\n2 YUMMER    2635.\n\n# mean unique genes/group\nmean_feature &lt;- seurat[[]] |&gt; group_by(cond) |&gt;  summarise(mean_gene = mean(nFeature_RNA))\nmean_feature\n\n# A tibble: 2 × 2\n  cond   mean_gene\n  &lt;chr&gt;      &lt;dbl&gt;\n1 YUMM       1241.\n2 YUMMER     1320.\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, cell_types) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\ncond_dat_nr &lt;- seurat[[]] |&gt; group_by(cond, cell_types_nr) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=cell_types)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_manual(values = list(\"YUMM\" = \"#F28E2B\", \"YUMMER\" = \"#E15759\")) + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cell_types, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\nggplot(cond_dat_nr, aes(fill=cell_types_nr, x=n_cells, y=cond)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")\n\n\n\n\n\nDimPlot(seurat, \n        group.by = \"cell_types_nr\", \n        split.by = \"cond\", \n        reduction = \"umap\",\n        label = T) + \n  ggtitle(\"\") + \n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#cluster-marker-gene-expression",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#cluster-marker-gene-expression",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "Cluster\nGenes\nCluster\nGenes\n\n\n0 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n9 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n1 - naive CD8 T cells\nCd3e, Cd8a, Tcf7, Lef1, Sell\n10 - naive CD4 T cells\nCd3e, Cd4, Tsf7\n\n\n2 - Monocytes\nCcr7, Csf2rb, Cd63\n11 - B cells\nCd79a, H2-Aa, H2-Ab1, Cd19, Sell\n\n\n3 - NK cells\nTsf7, Sell, Itgax, Klra8\n12 - T regs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n\n\n4 - exhausted CD8 T cells\nCd3e, Cd8a, Pdcd1, Ctla4\n13 - TGD\nCd3e, Trdc, Tsf7\n\n\n5 - TGD\nCd3e, Tsf7, Sell, Trdc\n14 - CD8 T cells\nCd3e, Cd8a\n\n\n6 - Granulocytes\nTcf7, Ccr7, Csf2rb, Cd74, H2-Ab1, H2-Aa, Cd63\n15 - DCs\nItgax, Itgam, Csf2rb, Il1r2, Cd74, H2-Aa, H2-Ab1\n\n\n7 - Tregs\nCd3e, Cd4, Sell, Tigit, FoxP3, Ctla4\n16 - LECs\nProx1, Pecam1\n\n\n8 - Granulocytes\nCcr7, Cd80, Csf2rb, Cd63\n17 - T cells\nCD4, Sell\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = c(dims, \"ident\", features),\n: The following requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 2, assay = \"SCT\", add.noise = F)\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, slot = slot): The\nfollowing requested variables were not found: Krt15, Cd62l\n\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\nWarning: Could not find Krt5 in the default search locations, found in RNA\nassay instead\n\n\nWarning in FetchData.Seurat(object = object, vars = features, cells = cells):\nThe following requested variables were not found: Krt15, Cd62l"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LN_CD45.html#conditional-marker-expression",
    "href": "code/SNF_draft/EDA/vis_LN_CD45.html#conditional-marker-expression",
    "title": "vis_lymphnode_leukocytes",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cond_marker, ncol = 2, split.by = \"cond\")\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker, \n        assay = \"SCT\", \n        add.noise = F, \n        split.by = \"cond\",\n        ncol = 1) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 7\ncluster0_seurat &lt;- subset(seurat, idents = 0)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster0_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = F,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()\n\n\n\n\n\n\n\n\n# Subset your Seurat object to only include cells from cluster 16\ncluster5_seurat &lt;- subset(seurat, idents = 5)\n\n# Create the violin plot for cluster 7\nVlnPlot(object = cluster5_seurat, \n        features = cond_marker,\n        group.by = \"cond\",\n        assay = \"SCT\", \n        add.noise = FALSE,\n        ncol = 2) + \n  plot_layout(guides = 'collect') &\n  scale_fill_tableau() &\n  theme_bw()"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html",
    "href": "code/SNF_draft/DE/de_LECs.html",
    "title": "DE_LECs",
    "section": "",
    "text": "Standard DE analysis using pseudobulk DE methods (note this differs from the FGCZ default analysis). We want to identify differentially expressed genes within LEC cluster between all groups of skin, YUMMER and YUMM.\n\n\n\nlibrary(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n\n\n\n\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  469    0      0\n  SkinLECs_Leukocytes2  669    0      0\n  TumorYUMM1_1A           0   17      0\n  TumorYUMM1_1B           0   18      0\n  TumorYUMM2_1A           0   57      0\n  TumorYUMM2_1B           0   49      0\n  TumorYUMM5_2A           0   44      0\n  TumorYUMM5_2B           0   44      0\n  TumorYUMM6_2A           0   58      0\n  TumorYUMM6_2B           0   72      0\n  TumorYUMMER3_1A         0    0     66\n  TumorYUMMER3_1B         0    0     44\n  TumorYUMMER4_1A         0    0     81\n  TumorYUMMER4_1B         0    0     68\n  TumorYUMMER7_2A         0    0     86\n  TumorYUMMER7_2B         0    0    101\n  TumorYUMMER8_2A         0    0    160\n  TumorYUMMER8_2B         0    0    135\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1138    359    741 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)\n\n\n\n\n\ncond_de &lt;- function(cond1, cond2){\n  # subset sce\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"ident\", \"Sample\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 5]\n  print(table(summed.filt$cond, summed.filt$ident))\n  # de\n  design &lt;- model.matrix(~factor(summed.filt$cond), summed.filt$Samples)\n  de.results &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$ident,\n    design=~factor(cond),\n    coef=ncol(design),\n    condition=summed.filt$cond \n)\n}\n\nskin_yumm &lt;- cond_de(\"skin\", \"YUMM\")\n\n      \n       0 1 2 3 4 5 6 7\n  skin 2 2 2 2 2 0 2 1\n  YUMM 6 4 5 3 3 6 1 5\n\nyummer_yumm &lt;- cond_de(\"YUMMER\", \"YUMM\")\n\n        \n         0 1 2 3 4 5 6 7\n  YUMM   6 4 5 3 3 6 1 5\n  YUMMER 8 5 8 8 6 7 5 2\n\nskin_yummer &lt;- cond_de(\"skin\",\"YUMMER\")\n\n        \n         0 1 2 3 4 5 6 7\n  skin   2 2 2 2 2 0 2 1\n  YUMMER 8 5 8 8 6 7 5 2\n\n#DE skin_yumm\nis.de &lt;- decideTestsPerLabel(skin_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0   1    NA\n0 79 1216  56 11727\n1 13  538  11 12516\n2 64  773  26 12215\n3 52  444  32 12550\n4  8  623   8 12439\n6 59 1663  42 11314\n7 44  749 131 12154\n\n#DE yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0  1    NA\n0  1 1155 15 11907\n1  1  453  2 12622\n2  6  999 11 12062\n3  0 1985 13 11080\n4  1  722  4 12351\n5  3  529 10 12536\n6  9 1403  1 11665\n7  0  670  4 12404\n\n#DE skin_yummer\nis.de &lt;- decideTestsPerLabel(skin_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n   -1    0   1    NA\n0 193 2059 168 10658\n1  29 1262  26 11761\n2 216 1755 152 10955\n3 284 2497 297 10000\n4  10  992  18 12058\n6 114 1566  93 11305\n7  44  456  94 12484\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path until DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/LEC_\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nde_skin_yumm &lt;- write_de_res(skin_yumm, res_nam = \"skin_yumm\")\nde_skin_yumm &lt;- write_de_res(yummer_yumm, res_nam = \"yummer_yumm\")\nde_skin_yumm &lt;- write_de_res(skin_yummer, res_nam = \"skin_yummer\")\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"YUMM\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#preamble",
    "href": "code/SNF_draft/DE/de_LECs.html#preamble",
    "title": "DE_LECs",
    "section": "",
    "text": "library(scran)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(stringr)\nlibrary(Seurat)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1, select_lab = NULL) {\n  EnhancedVolcano(df, \n    x = \"logFC\", y = \"PValue\",\n    FCcutoff = lfc, pCutoff = fdr,\n    selectLab = select_lab,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = rownames(df), labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(PValue &lt; fdr) |&gt; \n    slice_max(abs(logFC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[rownames(top),])\n  if (length(rownames(top)) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#data-object",
    "href": "code/SNF_draft/DE/de_LECs.html#data-object",
    "title": "DE_LECs",
    "section": "",
    "text": "seurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  469    0      0\n  SkinLECs_Leukocytes2  669    0      0\n  TumorYUMM1_1A           0   17      0\n  TumorYUMM1_1B           0   18      0\n  TumorYUMM2_1A           0   57      0\n  TumorYUMM2_1B           0   49      0\n  TumorYUMM5_2A           0   44      0\n  TumorYUMM5_2B           0   44      0\n  TumorYUMM6_2A           0   58      0\n  TumorYUMM6_2B           0   72      0\n  TumorYUMMER3_1A         0    0     66\n  TumorYUMMER3_1B         0    0     44\n  TumorYUMMER4_1A         0    0     81\n  TumorYUMMER4_1B         0    0     68\n  TumorYUMMER7_2A         0    0     86\n  TumorYUMMER7_2B         0    0    101\n  TumorYUMMER8_2A         0    0    160\n  TumorYUMMER8_2B         0    0    135\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1138    359    741 \n\n# switch to SingleCellExperiment object\nsce &lt;- as.SingleCellExperiment(seurat)"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#de-analysis",
    "href": "code/SNF_draft/DE/de_LECs.html#de-analysis",
    "title": "DE_LECs",
    "section": "",
    "text": "cond_de &lt;- function(cond1, cond2){\n  # subset sce\n  sce_sub &lt;- sce[,sce$cond %in% c(cond1, cond2)]\n  # creating pseudobulks\n  summed &lt;- aggregateAcrossCells(sce_sub, \n                                 id=colData(sce_sub)[,c(\"ident\", \"Sample\")])\n  # filter min cells\n  summed.filt &lt;- summed[,summed$ncells &gt;= 5]\n  print(table(summed.filt$cond, summed.filt$ident))\n  # de\n  design &lt;- model.matrix(~factor(summed.filt$cond), summed.filt$Samples)\n  de.results &lt;- pseudoBulkDGE(summed.filt, \n    label=summed.filt$ident,\n    design=~factor(cond),\n    coef=ncol(design),\n    condition=summed.filt$cond \n)\n}\n\nskin_yumm &lt;- cond_de(\"skin\", \"YUMM\")\n\n      \n       0 1 2 3 4 5 6 7\n  skin 2 2 2 2 2 0 2 1\n  YUMM 6 4 5 3 3 6 1 5\n\nyummer_yumm &lt;- cond_de(\"YUMMER\", \"YUMM\")\n\n        \n         0 1 2 3 4 5 6 7\n  YUMM   6 4 5 3 3 6 1 5\n  YUMMER 8 5 8 8 6 7 5 2\n\nskin_yummer &lt;- cond_de(\"skin\",\"YUMMER\")\n\n        \n         0 1 2 3 4 5 6 7\n  skin   2 2 2 2 2 0 2 1\n  YUMMER 8 5 8 8 6 7 5 2\n\n#DE skin_yumm\nis.de &lt;- decideTestsPerLabel(skin_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0   1    NA\n0 79 1216  56 11727\n1 13  538  11 12516\n2 64  773  26 12215\n3 52  444  32 12550\n4  8  623   8 12439\n6 59 1663  42 11314\n7 44  749 131 12154\n\n#DE yummer_yumm\nis.de &lt;- decideTestsPerLabel(yummer_yumm, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n  -1    0  1    NA\n0  1 1155 15 11907\n1  1  453  2 12622\n2  6  999 11 12062\n3  0 1985 13 11080\n4  1  722  4 12351\n5  3  529 10 12536\n6  9 1403  1 11665\n7  0  670  4 12404\n\n#DE skin_yummer\nis.de &lt;- decideTestsPerLabel(skin_yummer, threshold=0.05)\nsummarizeTestsPerLabel(is.de)\n\n   -1    0   1    NA\n0 193 2059 168 10658\n1  29 1262  26 11761\n2 216 1755 152 10955\n3 284 2497 297 10000\n4  10  992  18 12058\n6 114 1566  93 11305\n7  44  456  94 12484\n\n#write as output\nwrite_de_res &lt;- function(de_obj, res_nam){\n  res_list &lt;- lapply(names(de_obj), function(clust, nam = res_nam){\n    cur.res &lt;- de_obj[[clust]]\n    res &lt;- cur.res[order(cur.res$PValue),] |&gt; \n      as.data.frame() |&gt; \n      filter(!is.na(PValue))\n    ## --- adapt path until DE/ to local output path -----##\n    write.csv(res, paste0(\"../../../out/DE/LEC_\", nam, \"_\", clust, \".csv\"))\n    res\n  })\n}\n\nde_skin_yumm &lt;- write_de_res(skin_yumm, res_nam = \"skin_yumm\")\nde_skin_yumm &lt;- write_de_res(yummer_yumm, res_nam = \"yummer_yumm\")\nde_skin_yumm &lt;- write_de_res(skin_yummer, res_nam = \"skin_yummer\")"
  },
  {
    "objectID": "code/SNF_draft/DE/de_LECs.html#plot-results",
    "href": "code/SNF_draft/DE/de_LECs.html#plot-results",
    "title": "DE_LECs",
    "section": "",
    "text": "plot_list &lt;- lapply(names(skin_yumm), \\(.) {\n  df = skin_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(yummer_yumm), \\(.) {\n  df = yummer_yumm[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\nplot_list &lt;- lapply(names(skin_yummer), \\(.) {\n  df = skin_yummer[[.]]\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1, select_lab = c(\"Lyve1\"))\n  .volcano(df = df, title = ., fdr = 0.05, lfc = 1)\n  }\n)\n\nwrap_plots(plot_list, nrow = 4) + \n  plot_layout(guides = \"collect\") &\n  theme(legend.position = \"top\")\n\n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMM\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(yummer_yumm)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"YUMM\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(yummer_yumm[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 5 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7 \n\n\n\n\n\n\n\n\n\nfor (. in names(skin_yummer)) {\n    cat(\"####\", ., \"\\n\")\n    sub &lt;- subset(x = seurat, idents = .)\n    sub &lt;- subset(x = sub, subset = cond %in% c(\"YUMMER\", \"skin\"))\n    mtx &lt;- GetAssayData(object = sub, slot = 'data')\n    top &lt;- as.data.frame(skin_yummer[[.]]) %&gt;%\n    filter(PValue &lt; 0.05) |&gt; \n    slice_max(abs(logFC), n = 40)\n    mtx_sub &lt;- log1p(mtx[rownames(top),])\n    cd &lt;- data.frame(sub[[]] |&gt; select('cond'))\n    hm &lt;- pheatmap(mtx_sub, \n        main = ., fontsize = 6,\n        col = rev(hcl.colors(51, \"RdBu\")),\n        scale = \"row\", \n        show_colnames = FALSE, \n        cluster_cols = FALSE,\n        annotation_col = cd)\n    print(hm); cat(\"\\n\\n\")\n}\n\n#### 0 \n\n\n\n\n\n\n\n#### 1 \n\n\n\n\n\n\n\n#### 2 \n\n\n\n\n\n\n\n#### 3 \n\n\n\n\n\n\n\n#### 4 \n\n\n\n\n\n\n\n#### 6 \n\n\n\n\n\n\n\n#### 7"
  }
]
[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "YUMM –&gt; cold tumor YUMMER –&gt; hot tumor/very active immune response"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "The experiment consist of 3 main factors of interest:\n\nsample origin: tumor, skin, lymph node\nmain cell type class: leucocytes, LECs\ntumor type: YUMM, YUMMER\n\nAs a first check we are interested in the expression of specific marker genes/known marker and how they vary across combinations of these factors.\n\n\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nFrom the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 2 - Integrated tumor and skin LECs.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  469    0      0\n  SkinLECs_Leukocytes2  669    0      0\n  TumorYUMM1_1A           0   17      0\n  TumorYUMM1_1B           0   18      0\n  TumorYUMM2_1A           0   57      0\n  TumorYUMM2_1B           0   49      0\n  TumorYUMM5_2A           0   44      0\n  TumorYUMM5_2B           0   44      0\n  TumorYUMM6_2A           0   58      0\n  TumorYUMM6_2B           0   72      0\n  TumorYUMMER3_1A         0    0     66\n  TumorYUMMER3_1B         0    0     44\n  TumorYUMMER4_1A         0    0     81\n  TumorYUMMER4_1B         0    0     68\n  TumorYUMMER7_2A         0    0     86\n  TumorYUMMER7_2B         0    0    101\n  TumorYUMMER8_2A         0    0    160\n  TumorYUMMER8_2B         0    0    135\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1138    359    741 \n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Prox1\", \"Pdpn\", \"Ackr4\", \"Foxp2\", \"Cldn11\", \"Alcam\", \"Esam\", \"Cd24a\", \"Lyve1\", \"Ptx3\", \"Mrc1\", \"Ackr2\", \"Ccl21a\", \"Reln\", \"Mmrn1\", \"Mki67\", \"Aurkb\", \"Jam2\", \"Flt1\", \"Plvap\")\n\ncond_marker &lt;- c(\"Lyve1\", \"Ptx3\", \"Cldn11\", \"Mrc1\", \"Ackr2\", \"Icam1\", \"Vcam1\", \"Sema3a\", \"Nectin2\", \"Cd274\", \"Cxcl12\", \"Ccl21a\", \"Stat1\")\n\n\n\n\n\n\n\ncond_dat &lt;- seurat[[]] |&gt; group_by(cond, ident) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", split.by = \"cond\", reduction = \"umap\") + ggtitle(\"\")\n\n\n\n\n\n\n\n\n\n\n\nFeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))\n\n\n\n\n\n\n\n\nExpression by condition as Dimplot\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#preamble",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#preamble",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "library(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(stringr)\nlibrary(ggthemes)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#data-objects",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#data-objects",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "From the FGCZ we have different data objects:\n\nTumor LECs integrated (only tumor LECs, but have been integrated with skin samples) (data/scData_LEC_tumor.rds)\nTumor + skin LECs integrated (data/scData_LEC_tumor_skin.rds)\nAll skin + tumor cells\nAll lymphnode cells\n\nHere we work with object 2 - Integrated tumor and skin LECs.\n\n#### ----- change to local path to scData.rds object here ----- #####\n# e.g. seurat &lt;- readRDS(\"/home/project/data_folder/scData.rds)\")\nseurat&lt;- readRDS(file.path(\"..\", \"..\",\"..\",\"data\", \"scData_LEC_tumor_skin.rds\"))\n#### --------------------------------------------------------- #####\n\n# correct condition assignment!!\nseurat$cond &lt;- seurat[[]] |&gt; \n  mutate(\n    cond = case_when(\n       str_detect(Sample, \"YUMM[0-9]\") ~ \"YUMM\",\n       str_detect(Sample, \"YUMMER\") ~ \"YUMMER\",\n       str_detect(Sample, \"Skin\") ~ \"skin\"\n    )\n  ) |&gt; select(cond)\n\n# check assignment\ntable(seurat$Sample, seurat$cond)\n\n                      \n                       skin YUMM YUMMER\n  SkinLECs_Leukocytes1  469    0      0\n  SkinLECs_Leukocytes2  669    0      0\n  TumorYUMM1_1A           0   17      0\n  TumorYUMM1_1B           0   18      0\n  TumorYUMM2_1A           0   57      0\n  TumorYUMM2_1B           0   49      0\n  TumorYUMM5_2A           0   44      0\n  TumorYUMM5_2B           0   44      0\n  TumorYUMM6_2A           0   58      0\n  TumorYUMM6_2B           0   72      0\n  TumorYUMMER3_1A         0    0     66\n  TumorYUMMER3_1B         0    0     44\n  TumorYUMMER4_1A         0    0     81\n  TumorYUMMER4_1B         0    0     68\n  TumorYUMMER7_2A         0    0     86\n  TumorYUMMER7_2B         0    0    101\n  TumorYUMMER8_2A         0    0    160\n  TumorYUMMER8_2B         0    0    135\n\ntable(seurat$cond)\n\n\n  skin   YUMM YUMMER \n  1138    359    741 \n\nDefaultAssay(seurat) &lt;- \"SCT\"\n\ncluster_marker &lt;- c(\"Prox1\", \"Pdpn\", \"Ackr4\", \"Foxp2\", \"Cldn11\", \"Alcam\", \"Esam\", \"Cd24a\", \"Lyve1\", \"Ptx3\", \"Mrc1\", \"Ackr2\", \"Ccl21a\", \"Reln\", \"Mmrn1\", \"Mki67\", \"Aurkb\", \"Jam2\", \"Flt1\", \"Plvap\")\n\ncond_marker &lt;- c(\"Lyve1\", \"Ptx3\", \"Cldn11\", \"Mrc1\", \"Ackr2\", \"Icam1\", \"Vcam1\", \"Sema3a\", \"Nectin2\", \"Cd274\", \"Cxcl12\", \"Ccl21a\", \"Stat1\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#overview",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#overview",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "cond_dat &lt;- seurat[[]] |&gt; group_by(cond, ident) |&gt;  summarise(n_cells = n())\n\n`summarise()` has grouped output by 'cond'. You can override using the\n`.groups` argument.\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"stack\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\nggplot(cond_dat, aes(fill=cond, y=n_cells, x=ident)) + \n  geom_bar(position=\"fill\", stat=\"identity\") + \n  scale_fill_tableau() + \n  theme_bw()\n\n\n\n\n\n\n\n\nDimPlot(seurat, group.by = \"ident\", split.by = \"cond\", reduction = \"umap\") + ggtitle(\"\")"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#cluster-marker-gene-expression",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#cluster-marker-gene-expression",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "FeaturePlot(object = seurat, features = cluster_marker, ncol = 3)\n\n\n\n\n\n\n\n\nVlnPlot(object = seurat, features = cluster_marker, ncol = 3, assay = \"SCT\", add.noise = F)\n\n\n\n\n\n\n\n\nDotPlot(object = seurat, features = cluster_marker) + \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))"
  },
  {
    "objectID": "code/SNF_draft/EDA/vis_LECs_all.html#conditional-marker-expression",
    "href": "code/SNF_draft/EDA/vis_LECs_all.html#conditional-marker-expression",
    "title": "vis_LEC_tumor_skin",
    "section": "",
    "text": "Expression by condition as Dimplot\n\nFeaturePlot(object = seurat, features = cond_marker, ncol = 3, split.by = \"cond\")"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "LECs_tumor",
    "section": "",
    "text": "Study LEC migration within lymphatic system in the context of “hot” and “cold” tumor"
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html",
    "title": "vis_de",
    "section": "",
    "text": "Different visualization of the results from clusterwise DE analysis between merged LECs in all YUMM and YUMMER sample. DE was performed as part of a preliminary analysis of BD RHapsody sequencing data conducted by the FCGZ.\n\n\n\nPreliminary analysis identified 7 cluster. That is probably to many. We would expect 3-5 different LEC subpopulations. Ultimately we will probably recluster or merge cluster based on marker gene expression before DE analysis is conducted.\nThere are 2 result gene lists:\n\nConserved marker: Cluster marker genes (DE compared to other cluster) conserved across conditions. Cluster marker that are independent of the tumor type. These can be used to characterize/annotate cluster within the merged/integrated dataset.\nDE genes: Differentially expressed genes between conditions (YUMM vs YUMMER) within each cluster (“Celltype-specific changes”).\n\nMeaning in output table:\n\ncondition_pct.1: percentage of cells where the gene is detected in the cluster for condition\ncondition_pct.2: percentage of cells where the gene is detected on average in the other clusters for condition\n\n\n\n\n\n\nDo we expect specific LEC subtypes to change more between tumor types or do we expect more global changes across all LECs? It could be worth running a DE analysis for all LECs between the tumor types if the later is the case.\nDifferential abundance analysis: Do we expect a gloabl shift in LEC abundance or a subtype-specific shift?\n\n\n\n\n\nlibrary(edgeR)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(readxl)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nseurat &lt;- readRDS(file.path(\"..\", \"..\", \"..\", \"data\", \"scData_LEC_tumor.rds\"))\nDefaultAssay(seurat) &lt;- \"SCT\"\nde_genes &lt;- read_excel(file.path(\"..\", \"..\", \"..\", \"data\", \"diffGenes_yumm_yummer.xlsx\"))\n\n\n\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1) {\n  EnhancedVolcano(df, \n    x = \"avg_log2FC\", y = \"p_val_adj\",\n    FCcutoff = lfc, pCutoff = fdr,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = df[[\"gene\"]], labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[top$gene,])\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n.feature_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- FeaturePlot(seurat, features = top$gene, split.by = 'Condition',\n              max.cutoff = 3, cols = c('grey', 'red'))\n  p\n  }\n}\n\n.violin_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- VlnPlot(seurat, features = top$gene, split.by = 'Condition',\n              group.by = \"ident\", pt.size = 0, combine = FALSE)\n  wrap_plots(plots = p, ncol = 1)\n  }\n}\n\n\n\n\n\n\nTo get an overview of the distribution of cluster in 2d.\n\nDimPlot(seurat, label = TRUE)\n\n\n\n\n\n\nPlot most differentially expressed genes as volcano plot. We don’t have stats for all, but only DE genes (yet). This explains the shape of the volcano.\n\n\nCode\ncluster &lt;- levels(as.factor(de_genes$cluster))\n\n\n\n01234567\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\nWarning: ggrepel: 18 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\n\n\nShow the expression of the top cluster-specific DE genes on the UMAP plot\n\n01234567\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\nThe same as above, but as violin plot to better see expression level\n\n01234567\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\nThe default behaviour of split.by has changed.\nSeparate violin plots are now plotted side-by-side.\nTo restore the old behaviour of a single split violin,\nset split.plot = TRUE.\n      \nThis message will be shown once per session.\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\nCode\npurrr::map(cluster, \\(c) {\n      de_c &lt;- de_genes |&gt; \n        filter(cluster %in% c)\n      sub &lt;- subset(x = seurat, idents = c)\n      mtx &lt;- GetAssayData(object = sub, slot = 'data')\n      cd &lt;- data.frame(sub[[]] |&gt; select('Condition'))\n      .heatmap(mtx, de_c, cd, title = paste0('DE YUMM vs YUMMER in ', c),\n        fdr = 0.1, n_lfc = 20)\n})\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n[1] \"No de genes\"\n\n[[4]]\n\n[[5]]\n\n[[6]]\n\n[[7]]\n\n[[8]]\n[1] \"No de genes\""
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#preamble",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#preamble",
    "title": "vis_de",
    "section": "",
    "text": "library(edgeR)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\nlibrary(scuttle)\nlibrary(pheatmap)\nlibrary(patchwork)\nlibrary(Seurat)\nlibrary(readxl)\nlibrary(ggbeeswarm)\nlibrary(EnhancedVolcano)\nlibrary(SingleCellExperiment)\nlibrary(gridExtra)\n\n\n\n\nseurat &lt;- readRDS(file.path(\"..\", \"..\", \"..\", \"data\", \"scData_LEC_tumor.rds\"))\nDefaultAssay(seurat) &lt;- \"SCT\"\nde_genes &lt;- read_excel(file.path(\"..\", \"..\", \"..\", \"data\", \"diffGenes_yumm_yummer.xlsx\"))\n\n\n\n\n\n\nCode\n# volcano plot function as defined in https://github.com/HelenaLC/TLS-Silina/blob/main/code/geo-02-differential.qmd\n\n.volcano &lt;- \\(df, title, fdr = 0.05, lfc = 1) {\n  EnhancedVolcano(df, \n    x = \"avg_log2FC\", y = \"p_val_adj\",\n    FCcutoff = lfc, pCutoff = fdr,\n    pointSize = 1.7, raster = TRUE,\n    title = title, subtitle = NULL,\n    lab = df[[\"gene\"]], labSize = 4, \n    drawConnectors = TRUE, widthConnectors = 0.5) +\n  guides(col = guide_legend(override.aes = list(alpha = 1, size = 5))) +\n  theme_bw(9) + theme(\n    aspect.ratio = 1,\n    legend.title = element_blank(),\n    panel.grid.minor = element_blank())\n}\n\n.heatmap &lt;- \\(mtx, de_genes, cd, title, fdr = 0.05, n_lfc = 20) {\n  top &lt;- de_genes %&gt;%\n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  mtx_sub &lt;- log1p(mtx[top$gene,])\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  hm &lt;- pheatmap(mtx_sub, \n      main = title, fontsize = 6,\n      col = rev(hcl.colors(51, \"RdBu\")),\n      scale = \"row\", show_colnames = FALSE, annotation_col = cd)\n  hm\n  }\n}\n\n\n.feature_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- FeaturePlot(seurat, features = top$gene, split.by = 'Condition',\n              max.cutoff = 3, cols = c('grey', 'red'))\n  p\n  }\n}\n\n.violin_c &lt;- \\(seu, c, fdr = 0.05, n_lfc = 5) {\n  top &lt;- de_genes %&gt;%\n    filter(cluster %in% c) |&gt; \n    filter(p_val_adj &lt; fdr) |&gt; \n    slice_max(abs(avg_log2FC), n = n_lfc)\n  if (length(top$gene) &lt; 2){\n    return(print(\"No de genes\"))\n  }else{\n  p &lt;- VlnPlot(seurat, features = top$gene, split.by = 'Condition',\n              group.by = \"ident\", pt.size = 0, combine = FALSE)\n  wrap_plots(plots = p, ncol = 1)\n  }\n}"
  },
  {
    "objectID": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#visualization",
    "href": "code/SNF_draft/DE/vis_de_LEC_YUMM_YUMMER.html#visualization",
    "title": "vis_de",
    "section": "",
    "text": "To get an overview of the distribution of cluster in 2d.\n\nDimPlot(seurat, label = TRUE)\n\n\n\n\n\n\nPlot most differentially expressed genes as volcano plot. We don’t have stats for all, but only DE genes (yet). This explains the shape of the volcano.\n\n\nCode\ncluster &lt;- levels(as.factor(de_genes$cluster))\n\n\n\n01234567\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\nWarning: ggrepel: 18 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- filter(de_genes, cluster == c)\n.volcano(df, title = c, fdr = 0.1, lfc = 0.5) +\n  theme(legend.position = 'top')\n\n\n\n\n\n\n\n\n\n\n\nShow the expression of the top cluster-specific DE genes on the UMAP plot\n\n01234567\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.feature_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\nThe same as above, but as violin plot to better see expression level\n\n01234567\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\nThe default behaviour of split.by has changed.\nSeparate violin plots are now plotted side-by-side.\nTo restore the old behaviour of a single split violin,\nset split.plot = TRUE.\n      \nThis message will be shown once per session.\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n\n\n\n\n\n\n\nCode\n.violin_c(seu = seurat, c=c)\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\nCode\npurrr::map(cluster, \\(c) {\n      de_c &lt;- de_genes |&gt; \n        filter(cluster %in% c)\n      sub &lt;- subset(x = seurat, idents = c)\n      mtx &lt;- GetAssayData(object = sub, slot = 'data')\n      cd &lt;- data.frame(sub[[]] |&gt; select('Condition'))\n      .heatmap(mtx, de_c, cd, title = paste0('DE YUMM vs YUMMER in ', c),\n        fdr = 0.1, n_lfc = 20)\n})\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n\n\n\n\n\n\n[1] \"No de genes\"\n\n\n\n\n\n[[1]]\n\n[[2]]\n\n[[3]]\n[1] \"No de genes\"\n\n[[4]]\n\n[[5]]\n\n[[6]]\n\n[[7]]\n\n[[8]]\n[1] \"No de genes\""
  }
]